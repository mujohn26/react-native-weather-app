1c09f8d4b44fe75a8cbea45c79a0c3d6
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = startOfUTCWeekYear;

var _index = _interopRequireDefault(require("../toInteger/index.js"));

var _index2 = _interopRequireDefault(require("../getUTCWeekYear/index.js"));

var _index3 = _interopRequireDefault(require("../startOfUTCWeek/index.js"));

var _index4 = _interopRequireDefault(require("../requiredArgs/index.js"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function startOfUTCWeekYear(dirtyDate, dirtyOptions) {
  (0, _index4.default)(1, arguments);
  var options = dirtyOptions || {};
  var locale = options.locale;
  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;
  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : (0, _index.default)(localeFirstWeekContainsDate);
  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : (0, _index.default)(options.firstWeekContainsDate);
  var year = (0, _index2.default)(dirtyDate, dirtyOptions);
  var firstWeek = new Date(0);
  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);
  firstWeek.setUTCHours(0, 0, 0, 0);
  var date = (0, _index3.default)(firstWeek, dirtyOptions);
  return date;
}

module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVmYXVsdCIsInN0YXJ0T2ZVVENXZWVrWWVhciIsIl9pbmRleCIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX2luZGV4MiIsIl9pbmRleDMiLCJfaW5kZXg0Iiwib2JqIiwiX19lc01vZHVsZSIsImRpcnR5RGF0ZSIsImRpcnR5T3B0aW9ucyIsImFyZ3VtZW50cyIsIm9wdGlvbnMiLCJsb2NhbGUiLCJsb2NhbGVGaXJzdFdlZWtDb250YWluc0RhdGUiLCJmaXJzdFdlZWtDb250YWluc0RhdGUiLCJkZWZhdWx0Rmlyc3RXZWVrQ29udGFpbnNEYXRlIiwieWVhciIsImZpcnN0V2VlayIsIkRhdGUiLCJzZXRVVENGdWxsWWVhciIsInNldFVUQ0hvdXJzIiwiZGF0ZSIsIm1vZHVsZSJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUFBLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkMsT0FBdEIsRUFBK0IsWUFBL0IsRUFBNkM7QUFDM0NDLEVBQUFBLEtBQUssRUFBRTtBQURvQyxDQUE3QztBQUdBRCxPQUFPLENBQUNFLE9BQVIsR0FBa0JDLGtCQUFsQjs7QUFFQSxJQUFJQyxNQUFNLEdBQUdDLHNCQUFzQixDQUFDQyxPQUFPLHlCQUFSLENBQW5DOztBQUVBLElBQUlDLE9BQU8sR0FBR0Ysc0JBQXNCLENBQUNDLE9BQU8sOEJBQVIsQ0FBcEM7O0FBRUEsSUFBSUUsT0FBTyxHQUFHSCxzQkFBc0IsQ0FBQ0MsT0FBTyw4QkFBUixDQUFwQzs7QUFFQSxJQUFJRyxPQUFPLEdBQUdKLHNCQUFzQixDQUFDQyxPQUFPLDRCQUFSLENBQXBDOztBQUVBLFNBQVNELHNCQUFULENBQWdDSyxHQUFoQyxFQUFxQztBQUFFLFNBQU9BLEdBQUcsSUFBSUEsR0FBRyxDQUFDQyxVQUFYLEdBQXdCRCxHQUF4QixHQUE4QjtBQUFFUixJQUFBQSxPQUFPLEVBQUVRO0FBQVgsR0FBckM7QUFBd0Q7O0FBSS9GLFNBQVNQLGtCQUFULENBQTRCUyxTQUE1QixFQUF1Q0MsWUFBdkMsRUFBcUQ7QUFDbkQsR0FBQyxHQUFHSixPQUFPLENBQUNQLE9BQVosRUFBcUIsQ0FBckIsRUFBd0JZLFNBQXhCO0FBQ0EsTUFBSUMsT0FBTyxHQUFHRixZQUFZLElBQUksRUFBOUI7QUFDQSxNQUFJRyxNQUFNLEdBQUdELE9BQU8sQ0FBQ0MsTUFBckI7QUFDQSxNQUFJQywyQkFBMkIsR0FBR0QsTUFBTSxJQUFJQSxNQUFNLENBQUNELE9BQWpCLElBQTRCQyxNQUFNLENBQUNELE9BQVAsQ0FBZUcscUJBQTdFO0FBQ0EsTUFBSUMsNEJBQTRCLEdBQUdGLDJCQUEyQixJQUFJLElBQS9CLEdBQXNDLENBQXRDLEdBQTBDLENBQUMsR0FBR2IsTUFBTSxDQUFDRixPQUFYLEVBQW9CZSwyQkFBcEIsQ0FBN0U7QUFDQSxNQUFJQyxxQkFBcUIsR0FBR0gsT0FBTyxDQUFDRyxxQkFBUixJQUFpQyxJQUFqQyxHQUF3Q0MsNEJBQXhDLEdBQXVFLENBQUMsR0FBR2YsTUFBTSxDQUFDRixPQUFYLEVBQW9CYSxPQUFPLENBQUNHLHFCQUE1QixDQUFuRztBQUNBLE1BQUlFLElBQUksR0FBRyxDQUFDLEdBQUdiLE9BQU8sQ0FBQ0wsT0FBWixFQUFxQlUsU0FBckIsRUFBZ0NDLFlBQWhDLENBQVg7QUFDQSxNQUFJUSxTQUFTLEdBQUcsSUFBSUMsSUFBSixDQUFTLENBQVQsQ0FBaEI7QUFDQUQsRUFBQUEsU0FBUyxDQUFDRSxjQUFWLENBQXlCSCxJQUF6QixFQUErQixDQUEvQixFQUFrQ0YscUJBQWxDO0FBQ0FHLEVBQUFBLFNBQVMsQ0FBQ0csV0FBVixDQUFzQixDQUF0QixFQUF5QixDQUF6QixFQUE0QixDQUE1QixFQUErQixDQUEvQjtBQUNBLE1BQUlDLElBQUksR0FBRyxDQUFDLEdBQUdqQixPQUFPLENBQUNOLE9BQVosRUFBcUJtQixTQUFyQixFQUFnQ1IsWUFBaEMsQ0FBWDtBQUNBLFNBQU9ZLElBQVA7QUFDRDs7QUFFREMsTUFBTSxDQUFDMUIsT0FBUCxHQUFpQkEsT0FBTyxDQUFDRSxPQUF6QiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gc3RhcnRPZlVUQ1dlZWtZZWFyO1xuXG52YXIgX2luZGV4ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi4vdG9JbnRlZ2VyL2luZGV4LmpzXCIpKTtcblxudmFyIF9pbmRleDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuLi9nZXRVVENXZWVrWWVhci9pbmRleC5qc1wiKSk7XG5cbnZhciBfaW5kZXgzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi4vc3RhcnRPZlVUQ1dlZWsvaW5kZXguanNcIikpO1xuXG52YXIgX2luZGV4NCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4uL3JlcXVpcmVkQXJncy9pbmRleC5qc1wiKSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIFRoaXMgZnVuY3Rpb24gd2lsbCBiZSBhIHBhcnQgb2YgcHVibGljIEFQSSB3aGVuIFVUQyBmdW5jdGlvbiB3aWxsIGJlIGltcGxlbWVudGVkLlxuLy8gU2VlIGlzc3VlOiBodHRwczovL2dpdGh1Yi5jb20vZGF0ZS1mbnMvZGF0ZS1mbnMvaXNzdWVzLzM3NlxuZnVuY3Rpb24gc3RhcnRPZlVUQ1dlZWtZZWFyKGRpcnR5RGF0ZSwgZGlydHlPcHRpb25zKSB7XG4gICgwLCBfaW5kZXg0LmRlZmF1bHQpKDEsIGFyZ3VtZW50cyk7XG4gIHZhciBvcHRpb25zID0gZGlydHlPcHRpb25zIHx8IHt9O1xuICB2YXIgbG9jYWxlID0gb3B0aW9ucy5sb2NhbGU7XG4gIHZhciBsb2NhbGVGaXJzdFdlZWtDb250YWluc0RhdGUgPSBsb2NhbGUgJiYgbG9jYWxlLm9wdGlvbnMgJiYgbG9jYWxlLm9wdGlvbnMuZmlyc3RXZWVrQ29udGFpbnNEYXRlO1xuICB2YXIgZGVmYXVsdEZpcnN0V2Vla0NvbnRhaW5zRGF0ZSA9IGxvY2FsZUZpcnN0V2Vla0NvbnRhaW5zRGF0ZSA9PSBudWxsID8gMSA6ICgwLCBfaW5kZXguZGVmYXVsdCkobG9jYWxlRmlyc3RXZWVrQ29udGFpbnNEYXRlKTtcbiAgdmFyIGZpcnN0V2Vla0NvbnRhaW5zRGF0ZSA9IG9wdGlvbnMuZmlyc3RXZWVrQ29udGFpbnNEYXRlID09IG51bGwgPyBkZWZhdWx0Rmlyc3RXZWVrQ29udGFpbnNEYXRlIDogKDAsIF9pbmRleC5kZWZhdWx0KShvcHRpb25zLmZpcnN0V2Vla0NvbnRhaW5zRGF0ZSk7XG4gIHZhciB5ZWFyID0gKDAsIF9pbmRleDIuZGVmYXVsdCkoZGlydHlEYXRlLCBkaXJ0eU9wdGlvbnMpO1xuICB2YXIgZmlyc3RXZWVrID0gbmV3IERhdGUoMCk7XG4gIGZpcnN0V2Vlay5zZXRVVENGdWxsWWVhcih5ZWFyLCAwLCBmaXJzdFdlZWtDb250YWluc0RhdGUpO1xuICBmaXJzdFdlZWsuc2V0VVRDSG91cnMoMCwgMCwgMCwgMCk7XG4gIHZhciBkYXRlID0gKDAsIF9pbmRleDMuZGVmYXVsdCkoZmlyc3RXZWVrLCBkaXJ0eU9wdGlvbnMpO1xuICByZXR1cm4gZGF0ZTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7Il19