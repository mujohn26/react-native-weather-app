00e8a5661f0f5dd93958c3d3e13435f9
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = setDay;

var _index = _interopRequireDefault(require("../addDays/index.js"));

var _index2 = _interopRequireDefault(require("../toDate/index.js"));

var _index3 = _interopRequireDefault(require("../_lib/toInteger/index.js"));

var _index4 = _interopRequireDefault(require("../_lib/requiredArgs/index.js"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function setDay(dirtyDate, dirtyDay, dirtyOptions) {
  (0, _index4.default)(2, arguments);
  var options = dirtyOptions || {};
  var locale = options.locale;
  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : (0, _index3.default)(localeWeekStartsOn);
  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : (0, _index3.default)(options.weekStartsOn);

  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
  }

  var date = (0, _index2.default)(dirtyDate, options);
  var day = (0, _index3.default)(dirtyDay);
  var currentDay = date.getDay();
  var remainder = day % 7;
  var dayIndex = (remainder + 7) % 7;
  var delta = 7 - weekStartsOn;
  var diff = day < 0 || day > 6 ? day - (currentDay + delta) % 7 : (dayIndex + delta) % 7 - (currentDay + delta) % 7;
  return (0, _index.default)(date, diff, options);
}

module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVmYXVsdCIsInNldERheSIsIl9pbmRleCIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX2luZGV4MiIsIl9pbmRleDMiLCJfaW5kZXg0Iiwib2JqIiwiX19lc01vZHVsZSIsImRpcnR5RGF0ZSIsImRpcnR5RGF5IiwiZGlydHlPcHRpb25zIiwiYXJndW1lbnRzIiwib3B0aW9ucyIsImxvY2FsZSIsImxvY2FsZVdlZWtTdGFydHNPbiIsIndlZWtTdGFydHNPbiIsImRlZmF1bHRXZWVrU3RhcnRzT24iLCJSYW5nZUVycm9yIiwiZGF0ZSIsImRheSIsImN1cnJlbnREYXkiLCJnZXREYXkiLCJyZW1haW5kZXIiLCJkYXlJbmRleCIsImRlbHRhIiwiZGlmZiIsIm1vZHVsZSJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUFBLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkMsT0FBdEIsRUFBK0IsWUFBL0IsRUFBNkM7QUFDM0NDLEVBQUFBLEtBQUssRUFBRTtBQURvQyxDQUE3QztBQUdBRCxPQUFPLENBQUNFLE9BQVIsR0FBa0JDLE1BQWxCOztBQUVBLElBQUlDLE1BQU0sR0FBR0Msc0JBQXNCLENBQUNDLE9BQU8sdUJBQVIsQ0FBbkM7O0FBRUEsSUFBSUMsT0FBTyxHQUFHRixzQkFBc0IsQ0FBQ0MsT0FBTyxzQkFBUixDQUFwQzs7QUFFQSxJQUFJRSxPQUFPLEdBQUdILHNCQUFzQixDQUFDQyxPQUFPLDhCQUFSLENBQXBDOztBQUVBLElBQUlHLE9BQU8sR0FBR0osc0JBQXNCLENBQUNDLE9BQU8saUNBQVIsQ0FBcEM7O0FBRUEsU0FBU0Qsc0JBQVQsQ0FBZ0NLLEdBQWhDLEVBQXFDO0FBQUUsU0FBT0EsR0FBRyxJQUFJQSxHQUFHLENBQUNDLFVBQVgsR0FBd0JELEdBQXhCLEdBQThCO0FBQUVSLElBQUFBLE9BQU8sRUFBRVE7QUFBWCxHQUFyQztBQUF3RDs7QUFpQy9GLFNBQVNQLE1BQVQsQ0FBZ0JTLFNBQWhCLEVBQTJCQyxRQUEzQixFQUFxQ0MsWUFBckMsRUFBbUQ7QUFDakQsR0FBQyxHQUFHTCxPQUFPLENBQUNQLE9BQVosRUFBcUIsQ0FBckIsRUFBd0JhLFNBQXhCO0FBQ0EsTUFBSUMsT0FBTyxHQUFHRixZQUFZLElBQUksRUFBOUI7QUFDQSxNQUFJRyxNQUFNLEdBQUdELE9BQU8sQ0FBQ0MsTUFBckI7QUFDQSxNQUFJQyxrQkFBa0IsR0FBR0QsTUFBTSxJQUFJQSxNQUFNLENBQUNELE9BQWpCLElBQTRCQyxNQUFNLENBQUNELE9BQVAsQ0FBZUcsWUFBcEU7QUFDQSxNQUFJQyxtQkFBbUIsR0FBR0Ysa0JBQWtCLElBQUksSUFBdEIsR0FBNkIsQ0FBN0IsR0FBaUMsQ0FBQyxHQUFHVixPQUFPLENBQUNOLE9BQVosRUFBcUJnQixrQkFBckIsQ0FBM0Q7QUFDQSxNQUFJQyxZQUFZLEdBQUdILE9BQU8sQ0FBQ0csWUFBUixJQUF3QixJQUF4QixHQUErQkMsbUJBQS9CLEdBQXFELENBQUMsR0FBR1osT0FBTyxDQUFDTixPQUFaLEVBQXFCYyxPQUFPLENBQUNHLFlBQTdCLENBQXhFOztBQUVBLE1BQUksRUFBRUEsWUFBWSxJQUFJLENBQWhCLElBQXFCQSxZQUFZLElBQUksQ0FBdkMsQ0FBSixFQUErQztBQUM3QyxVQUFNLElBQUlFLFVBQUosQ0FBZSxrREFBZixDQUFOO0FBQ0Q7O0FBRUQsTUFBSUMsSUFBSSxHQUFHLENBQUMsR0FBR2YsT0FBTyxDQUFDTCxPQUFaLEVBQXFCVSxTQUFyQixFQUFnQ0ksT0FBaEMsQ0FBWDtBQUNBLE1BQUlPLEdBQUcsR0FBRyxDQUFDLEdBQUdmLE9BQU8sQ0FBQ04sT0FBWixFQUFxQlcsUUFBckIsQ0FBVjtBQUNBLE1BQUlXLFVBQVUsR0FBR0YsSUFBSSxDQUFDRyxNQUFMLEVBQWpCO0FBQ0EsTUFBSUMsU0FBUyxHQUFHSCxHQUFHLEdBQUcsQ0FBdEI7QUFDQSxNQUFJSSxRQUFRLEdBQUcsQ0FBQ0QsU0FBUyxHQUFHLENBQWIsSUFBa0IsQ0FBakM7QUFDQSxNQUFJRSxLQUFLLEdBQUcsSUFBSVQsWUFBaEI7QUFDQSxNQUFJVSxJQUFJLEdBQUdOLEdBQUcsR0FBRyxDQUFOLElBQVdBLEdBQUcsR0FBRyxDQUFqQixHQUFxQkEsR0FBRyxHQUFHLENBQUNDLFVBQVUsR0FBR0ksS0FBZCxJQUF1QixDQUFsRCxHQUFzRCxDQUFDRCxRQUFRLEdBQUdDLEtBQVosSUFBcUIsQ0FBckIsR0FBeUIsQ0FBQ0osVUFBVSxHQUFHSSxLQUFkLElBQXVCLENBQWpIO0FBQ0EsU0FBTyxDQUFDLEdBQUd4QixNQUFNLENBQUNGLE9BQVgsRUFBb0JvQixJQUFwQixFQUEwQk8sSUFBMUIsRUFBZ0NiLE9BQWhDLENBQVA7QUFDRDs7QUFFRGMsTUFBTSxDQUFDOUIsT0FBUCxHQUFpQkEsT0FBTyxDQUFDRSxPQUF6QiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gc2V0RGF5O1xuXG52YXIgX2luZGV4ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi4vYWRkRGF5cy9pbmRleC5qc1wiKSk7XG5cbnZhciBfaW5kZXgyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi4vdG9EYXRlL2luZGV4LmpzXCIpKTtcblxudmFyIF9pbmRleDMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuLi9fbGliL3RvSW50ZWdlci9pbmRleC5qc1wiKSk7XG5cbnZhciBfaW5kZXg0ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi4vX2xpYi9yZXF1aXJlZEFyZ3MvaW5kZXguanNcIikpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vKipcbiAqIEBuYW1lIHNldERheVxuICogQGNhdGVnb3J5IFdlZWtkYXkgSGVscGVyc1xuICogQHN1bW1hcnkgU2V0IHRoZSBkYXkgb2YgdGhlIHdlZWsgdG8gdGhlIGdpdmVuIGRhdGUuXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKiBTZXQgdGhlIGRheSBvZiB0aGUgd2VlayB0byB0aGUgZ2l2ZW4gZGF0ZS5cbiAqXG4gKiAjIyMgdjIuMC4wIGJyZWFraW5nIGNoYW5nZXM6XG4gKlxuICogLSBbQ2hhbmdlcyB0aGF0IGFyZSBjb21tb24gZm9yIHRoZSB3aG9sZSBsaWJyYXJ5XShodHRwczovL2dpdGh1Yi5jb20vZGF0ZS1mbnMvZGF0ZS1mbnMvYmxvYi9tYXN0ZXIvZG9jcy91cGdyYWRlR3VpZGUubWQjQ29tbW9uLUNoYW5nZXMpLlxuICpcbiAqIEBwYXJhbSB7RGF0ZXxOdW1iZXJ9IGRhdGUgLSB0aGUgZGF0ZSB0byBiZSBjaGFuZ2VkXG4gKiBAcGFyYW0ge051bWJlcn0gZGF5IC0gdGhlIGRheSBvZiB0aGUgd2VlayBvZiB0aGUgbmV3IGRhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc10gLSBhbiBvYmplY3Qgd2l0aCBvcHRpb25zLlxuICogQHBhcmFtIHtMb2NhbGV9IFtvcHRpb25zLmxvY2FsZT1kZWZhdWx0TG9jYWxlXSAtIHRoZSBsb2NhbGUgb2JqZWN0LiBTZWUgW0xvY2FsZV17QGxpbmsgaHR0cHM6Ly9kYXRlLWZucy5vcmcvZG9jcy9Mb2NhbGV9XG4gKiBAcGFyYW0gezB8MXwyfDN8NHw1fDZ9IFtvcHRpb25zLndlZWtTdGFydHNPbj0wXSAtIHRoZSBpbmRleCBvZiB0aGUgZmlyc3QgZGF5IG9mIHRoZSB3ZWVrICgwIC0gU3VuZGF5KVxuICogQHJldHVybnMge0RhdGV9IHRoZSBuZXcgZGF0ZSB3aXRoIHRoZSBkYXkgb2YgdGhlIHdlZWsgc2V0XG4gKiBAdGhyb3dzIHtUeXBlRXJyb3J9IDIgYXJndW1lbnRzIHJlcXVpcmVkXG4gKiBAdGhyb3dzIHtSYW5nZUVycm9yfSBgb3B0aW9ucy53ZWVrU3RhcnRzT25gIG11c3QgYmUgYmV0d2VlbiAwIGFuZCA2XG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIFNldCB3ZWVrIGRheSB0byBTdW5kYXksIHdpdGggdGhlIGRlZmF1bHQgd2Vla1N0YXJ0c09uIG9mIFN1bmRheTpcbiAqIHZhciByZXN1bHQgPSBzZXREYXkobmV3IERhdGUoMjAxNCwgOCwgMSksIDApXG4gKiAvLz0+IFN1biBBdWcgMzEgMjAxNCAwMDowMDowMFxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBTZXQgd2VlayBkYXkgdG8gU3VuZGF5LCB3aXRoIGEgd2Vla1N0YXJ0c09uIG9mIE1vbmRheTpcbiAqIHZhciByZXN1bHQgPSBzZXREYXkobmV3IERhdGUoMjAxNCwgOCwgMSksIDAsIHsgd2Vla1N0YXJ0c09uOiAxIH0pXG4gKiAvLz0+IFN1biBTZXAgMDcgMjAxNCAwMDowMDowMFxuICovXG5mdW5jdGlvbiBzZXREYXkoZGlydHlEYXRlLCBkaXJ0eURheSwgZGlydHlPcHRpb25zKSB7XG4gICgwLCBfaW5kZXg0LmRlZmF1bHQpKDIsIGFyZ3VtZW50cyk7XG4gIHZhciBvcHRpb25zID0gZGlydHlPcHRpb25zIHx8IHt9O1xuICB2YXIgbG9jYWxlID0gb3B0aW9ucy5sb2NhbGU7XG4gIHZhciBsb2NhbGVXZWVrU3RhcnRzT24gPSBsb2NhbGUgJiYgbG9jYWxlLm9wdGlvbnMgJiYgbG9jYWxlLm9wdGlvbnMud2Vla1N0YXJ0c09uO1xuICB2YXIgZGVmYXVsdFdlZWtTdGFydHNPbiA9IGxvY2FsZVdlZWtTdGFydHNPbiA9PSBudWxsID8gMCA6ICgwLCBfaW5kZXgzLmRlZmF1bHQpKGxvY2FsZVdlZWtTdGFydHNPbik7XG4gIHZhciB3ZWVrU3RhcnRzT24gPSBvcHRpb25zLndlZWtTdGFydHNPbiA9PSBudWxsID8gZGVmYXVsdFdlZWtTdGFydHNPbiA6ICgwLCBfaW5kZXgzLmRlZmF1bHQpKG9wdGlvbnMud2Vla1N0YXJ0c09uKTsgLy8gVGVzdCBpZiB3ZWVrU3RhcnRzT24gaXMgYmV0d2VlbiAwIGFuZCA2IF9hbmRfIGlzIG5vdCBOYU5cblxuICBpZiAoISh3ZWVrU3RhcnRzT24gPj0gMCAmJiB3ZWVrU3RhcnRzT24gPD0gNikpIHtcbiAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignd2Vla1N0YXJ0c09uIG11c3QgYmUgYmV0d2VlbiAwIGFuZCA2IGluY2x1c2l2ZWx5Jyk7XG4gIH1cblxuICB2YXIgZGF0ZSA9ICgwLCBfaW5kZXgyLmRlZmF1bHQpKGRpcnR5RGF0ZSwgb3B0aW9ucyk7XG4gIHZhciBkYXkgPSAoMCwgX2luZGV4My5kZWZhdWx0KShkaXJ0eURheSk7XG4gIHZhciBjdXJyZW50RGF5ID0gZGF0ZS5nZXREYXkoKTtcbiAgdmFyIHJlbWFpbmRlciA9IGRheSAlIDc7XG4gIHZhciBkYXlJbmRleCA9IChyZW1haW5kZXIgKyA3KSAlIDc7XG4gIHZhciBkZWx0YSA9IDcgLSB3ZWVrU3RhcnRzT247XG4gIHZhciBkaWZmID0gZGF5IDwgMCB8fCBkYXkgPiA2ID8gZGF5IC0gKGN1cnJlbnREYXkgKyBkZWx0YSkgJSA3IDogKGRheUluZGV4ICsgZGVsdGEpICUgNyAtIChjdXJyZW50RGF5ICsgZGVsdGEpICUgNztcbiAgcmV0dXJuICgwLCBfaW5kZXguZGVmYXVsdCkoZGF0ZSwgZGlmZiwgb3B0aW9ucyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0OyJdfQ==