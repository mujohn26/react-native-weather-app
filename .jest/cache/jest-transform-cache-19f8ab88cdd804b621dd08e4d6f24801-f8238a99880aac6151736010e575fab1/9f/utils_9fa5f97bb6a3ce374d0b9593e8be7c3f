a38cebdadfc6e5911dd359aaa24432a8
var parse = require("./parse"),
    render = require('dom-serializer'),
    assign = require('lodash/assign');

var tags = {
  tag: true,
  script: true,
  style: true
};

exports.isTag = function (type) {
  if (type.type) type = type.type;
  return tags[type] || false;
};

exports.camelCase = function (str) {
  return str.replace(/[_.-](\w|$)/g, function (_, x) {
    return x.toUpperCase();
  });
};

exports.cssCase = function (str) {
  return str.replace(/[A-Z]/g, '-$&').toLowerCase();
};

exports.domEach = function (cheerio, fn) {
  var i = 0,
      len = cheerio.length;

  while (i < len && fn.call(cheerio, i, cheerio[i]) !== false) {
    ++i;
  }

  return cheerio;
};

exports.cloneDom = function (dom, options) {
  options = assign({}, options, {
    _useHtmlParser2: true
  });
  return parse(render(dom, options), options, false).children;
};

var quickExpr = /^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/;

exports.isHtml = function (str) {
  if (str.charAt(0) === '<' && str.charAt(str.length - 1) === '>' && str.length >= 3) return true;
  var match = quickExpr.exec(str);
  return !!(match && match[1]);
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxzLmpzIl0sIm5hbWVzIjpbInBhcnNlIiwicmVxdWlyZSIsInJlbmRlciIsImFzc2lnbiIsInRhZ3MiLCJ0YWciLCJzY3JpcHQiLCJzdHlsZSIsImV4cG9ydHMiLCJpc1RhZyIsInR5cGUiLCJjYW1lbENhc2UiLCJzdHIiLCJyZXBsYWNlIiwiXyIsIngiLCJ0b1VwcGVyQ2FzZSIsImNzc0Nhc2UiLCJ0b0xvd2VyQ2FzZSIsImRvbUVhY2giLCJjaGVlcmlvIiwiZm4iLCJpIiwibGVuIiwibGVuZ3RoIiwiY2FsbCIsImNsb25lRG9tIiwiZG9tIiwib3B0aW9ucyIsIl91c2VIdG1sUGFyc2VyMiIsImNoaWxkcmVuIiwicXVpY2tFeHByIiwiaXNIdG1sIiwiY2hhckF0IiwibWF0Y2giLCJleGVjIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxLQUFLLEdBQUdDLE9BQU8sV0FBbkI7QUFBQSxJQUNJQyxNQUFNLEdBQUdELE9BQU8sQ0FBQyxnQkFBRCxDQURwQjtBQUFBLElBRUlFLE1BQU0sR0FBR0YsT0FBTyxDQUFDLGVBQUQsQ0FGcEI7O0FBUUEsSUFBSUcsSUFBSSxHQUFHO0FBQUVDLEVBQUFBLEdBQUcsRUFBRSxJQUFQO0FBQWFDLEVBQUFBLE1BQU0sRUFBRSxJQUFyQjtBQUEyQkMsRUFBQUEsS0FBSyxFQUFFO0FBQWxDLENBQVg7O0FBUUFDLE9BQU8sQ0FBQ0MsS0FBUixHQUFnQixVQUFTQyxJQUFULEVBQWU7QUFDN0IsTUFBSUEsSUFBSSxDQUFDQSxJQUFULEVBQWVBLElBQUksR0FBR0EsSUFBSSxDQUFDQSxJQUFaO0FBQ2YsU0FBT04sSUFBSSxDQUFDTSxJQUFELENBQUosSUFBYyxLQUFyQjtBQUNELENBSEQ7O0FBV0FGLE9BQU8sQ0FBQ0csU0FBUixHQUFvQixVQUFTQyxHQUFULEVBQWM7QUFDaEMsU0FBT0EsR0FBRyxDQUFDQyxPQUFKLENBQVksY0FBWixFQUE0QixVQUFTQyxDQUFULEVBQVlDLENBQVosRUFBZTtBQUNoRCxXQUFPQSxDQUFDLENBQUNDLFdBQUYsRUFBUDtBQUNELEdBRk0sQ0FBUDtBQUdELENBSkQ7O0FBWUFSLE9BQU8sQ0FBQ1MsT0FBUixHQUFrQixVQUFTTCxHQUFULEVBQWM7QUFDOUIsU0FBT0EsR0FBRyxDQUFDQyxPQUFKLENBQVksUUFBWixFQUFzQixLQUF0QixFQUE2QkssV0FBN0IsRUFBUDtBQUNELENBRkQ7O0FBV0FWLE9BQU8sQ0FBQ1csT0FBUixHQUFrQixVQUFTQyxPQUFULEVBQWtCQyxFQUFsQixFQUFzQjtBQUN0QyxNQUFJQyxDQUFDLEdBQUcsQ0FBUjtBQUFBLE1BQVdDLEdBQUcsR0FBR0gsT0FBTyxDQUFDSSxNQUF6Qjs7QUFDQSxTQUFPRixDQUFDLEdBQUdDLEdBQUosSUFBV0YsRUFBRSxDQUFDSSxJQUFILENBQVFMLE9BQVIsRUFBaUJFLENBQWpCLEVBQW9CRixPQUFPLENBQUNFLENBQUQsQ0FBM0IsTUFBb0MsS0FBdEQ7QUFBNkQsTUFBRUEsQ0FBRjtBQUE3RDs7QUFDQSxTQUFPRixPQUFQO0FBQ0QsQ0FKRDs7QUFhQVosT0FBTyxDQUFDa0IsUUFBUixHQUFtQixVQUFTQyxHQUFULEVBQWNDLE9BQWQsRUFBdUI7QUFDeENBLEVBQUFBLE9BQU8sR0FBR3pCLE1BQU0sQ0FBQyxFQUFELEVBQUt5QixPQUFMLEVBQWM7QUFBRUMsSUFBQUEsZUFBZSxFQUFFO0FBQW5CLEdBQWQsQ0FBaEI7QUFFQSxTQUFPN0IsS0FBSyxDQUFDRSxNQUFNLENBQUN5QixHQUFELEVBQU1DLE9BQU4sQ0FBUCxFQUF1QkEsT0FBdkIsRUFBZ0MsS0FBaEMsQ0FBTCxDQUE0Q0UsUUFBbkQ7QUFDRCxDQUpEOztBQVVBLElBQUlDLFNBQVMsR0FBRywwQ0FBaEI7O0FBS0F2QixPQUFPLENBQUN3QixNQUFSLEdBQWlCLFVBQVNwQixHQUFULEVBQWM7QUFFN0IsTUFBSUEsR0FBRyxDQUFDcUIsTUFBSixDQUFXLENBQVgsTUFBa0IsR0FBbEIsSUFBeUJyQixHQUFHLENBQUNxQixNQUFKLENBQVdyQixHQUFHLENBQUNZLE1BQUosR0FBYSxDQUF4QixNQUErQixHQUF4RCxJQUErRFosR0FBRyxDQUFDWSxNQUFKLElBQWMsQ0FBakYsRUFBb0YsT0FBTyxJQUFQO0FBR3BGLE1BQUlVLEtBQUssR0FBR0gsU0FBUyxDQUFDSSxJQUFWLENBQWV2QixHQUFmLENBQVo7QUFDQSxTQUFPLENBQUMsRUFBRXNCLEtBQUssSUFBSUEsS0FBSyxDQUFDLENBQUQsQ0FBaEIsQ0FBUjtBQUNELENBUEQiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcGFyc2UgPSByZXF1aXJlKCcuL3BhcnNlJyksXG4gICAgcmVuZGVyID0gcmVxdWlyZSgnZG9tLXNlcmlhbGl6ZXInKSxcbiAgICBhc3NpZ24gPSByZXF1aXJlKCdsb2Rhc2gvYXNzaWduJyk7XG5cbi8qKlxuICogSFRNTCBUYWdzXG4gKi9cblxudmFyIHRhZ3MgPSB7IHRhZzogdHJ1ZSwgc2NyaXB0OiB0cnVlLCBzdHlsZTogdHJ1ZSB9O1xuXG4vKipcbiAqIENoZWNrIGlmIHRoZSBET00gZWxlbWVudCBpcyBhIHRhZ1xuICpcbiAqIGlzVGFnKHR5cGUpIGluY2x1ZGVzIDxzY3JpcHQ+IGFuZCA8c3R5bGU+IHRhZ3NcbiAqL1xuXG5leHBvcnRzLmlzVGFnID0gZnVuY3Rpb24odHlwZSkge1xuICBpZiAodHlwZS50eXBlKSB0eXBlID0gdHlwZS50eXBlO1xuICByZXR1cm4gdGFnc1t0eXBlXSB8fCBmYWxzZTtcbn07XG5cbi8qKlxuICogQ29udmVydCBhIHN0cmluZyB0byBjYW1lbCBjYXNlIG5vdGF0aW9uLlxuICogQHBhcmFtICB7U3RyaW5nfSBzdHIgU3RyaW5nIHRvIGJlIGNvbnZlcnRlZC5cbiAqIEByZXR1cm4ge1N0cmluZ30gICAgIFN0cmluZyBpbiBjYW1lbCBjYXNlIG5vdGF0aW9uLlxuICovXG5cbmV4cG9ydHMuY2FtZWxDYXNlID0gZnVuY3Rpb24oc3RyKSB7XG4gIHJldHVybiBzdHIucmVwbGFjZSgvW18uLV0oXFx3fCQpL2csIGZ1bmN0aW9uKF8sIHgpIHtcbiAgICByZXR1cm4geC50b1VwcGVyQ2FzZSgpO1xuICB9KTtcbn07XG5cbi8qKlxuICogQ29udmVydCBhIHN0cmluZyBmcm9tIGNhbWVsIGNhc2UgdG8gXCJDU1MgY2FzZVwiLCB3aGVyZSB3b3JkIGJvdW5kYXJpZXMgYXJlXG4gKiBkZXNjcmliZWQgYnkgaHlwaGVucyAoXCItXCIpIGFuZCBhbGwgY2hhcmFjdGVycyBhcmUgbG93ZXItY2FzZS5cbiAqIEBwYXJhbSAge1N0cmluZ30gc3RyIFN0cmluZyB0byBiZSBjb252ZXJ0ZWQuXG4gKiBAcmV0dXJuIHtzdHJpbmd9ICAgICBTdHJpbmcgaW4gXCJDU1MgY2FzZVwiLlxuICovXG5leHBvcnRzLmNzc0Nhc2UgPSBmdW5jdGlvbihzdHIpIHtcbiAgcmV0dXJuIHN0ci5yZXBsYWNlKC9bQS1aXS9nLCAnLSQmJykudG9Mb3dlckNhc2UoKTtcbn07XG5cbi8qKlxuICogSXRlcmF0ZSBvdmVyIGVhY2ggRE9NIGVsZW1lbnQgd2l0aG91dCBjcmVhdGluZyBpbnRlcm1lZGlhcnkgQ2hlZXJpbyBpbnN0YW5jZXMuXG4gKlxuICogVGhpcyBpcyBpbmRlbnRlZCBmb3IgdXNlIGludGVybmFsbHkgdG8gYXZvaWQgb3RoZXJ3aXNlIHVubmVjZXNzYXJ5IG1lbW9yeSBwcmVzc3VyZSBpbnRyb2R1Y2VkXG4gKiBieSBfbWFrZS5cbiAqL1xuXG5leHBvcnRzLmRvbUVhY2ggPSBmdW5jdGlvbihjaGVlcmlvLCBmbikge1xuICB2YXIgaSA9IDAsIGxlbiA9IGNoZWVyaW8ubGVuZ3RoO1xuICB3aGlsZSAoaSA8IGxlbiAmJiBmbi5jYWxsKGNoZWVyaW8sIGksIGNoZWVyaW9baV0pICE9PSBmYWxzZSkgKytpO1xuICByZXR1cm4gY2hlZXJpbztcbn07XG5cbi8qKlxuICogQ3JlYXRlIGEgZGVlcCBjb3B5IG9mIHRoZSBnaXZlbiBET00gc3RydWN0dXJlIGJ5IGZpcnN0IHJlbmRlcmluZyBpdCB0byBhXG4gKiBzdHJpbmcgYW5kIHRoZW4gcGFyc2luZyB0aGUgcmVzdWx0YW50IG1hcmt1cC5cbiAqXG4gKiBAYXJndW1lbnQge09iamVjdH0gZG9tIC0gVGhlIGh0bWxwYXJzZXIyLWNvbXBsaWFudCBET00gc3RydWN0dXJlXG4gKiBAYXJndW1lbnQge09iamVjdH0gb3B0aW9ucyAtIFRoZSBwYXJzaW5nL3JlbmRlcmluZyBvcHRpb25zXG4gKi9cbmV4cG9ydHMuY2xvbmVEb20gPSBmdW5jdGlvbihkb20sIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IGFzc2lnbih7fSwgb3B0aW9ucywgeyBfdXNlSHRtbFBhcnNlcjI6IHRydWUgfSk7XG5cbiAgcmV0dXJuIHBhcnNlKHJlbmRlcihkb20sIG9wdGlvbnMpLCBvcHRpb25zLCBmYWxzZSkuY2hpbGRyZW47XG59O1xuXG4vKlxuICogQSBzaW1wbGUgd2F5IHRvIGNoZWNrIGZvciBIVE1MIHN0cmluZ3Mgb3IgSUQgc3RyaW5nc1xuICovXG5cbnZhciBxdWlja0V4cHIgPSAvXig/OlteIzxdKig8W1xcd1xcV10rPilbXj5dKiR8IyhbXFx3XFwtXSopJCkvO1xuXG4vKlxuICogQ2hlY2sgaWYgc3RyaW5nIGlzIEhUTUxcbiAqL1xuZXhwb3J0cy5pc0h0bWwgPSBmdW5jdGlvbihzdHIpIHtcbiAgLy8gRmFzdGVyIHRoYW4gcnVubmluZyByZWdleCwgaWYgc3RyIHN0YXJ0cyB3aXRoIGA8YCBhbmQgZW5kcyB3aXRoIGA+YCwgYXNzdW1lIGl0J3MgSFRNTFxuICBpZiAoc3RyLmNoYXJBdCgwKSA9PT0gJzwnICYmIHN0ci5jaGFyQXQoc3RyLmxlbmd0aCAtIDEpID09PSAnPicgJiYgc3RyLmxlbmd0aCA+PSAzKSByZXR1cm4gdHJ1ZTtcblxuICAvLyBSdW4gdGhlIHJlZ2V4XG4gIHZhciBtYXRjaCA9IHF1aWNrRXhwci5leGVjKHN0cik7XG4gIHJldHVybiAhIShtYXRjaCAmJiBtYXRjaFsxXSk7XG59O1xuIl19