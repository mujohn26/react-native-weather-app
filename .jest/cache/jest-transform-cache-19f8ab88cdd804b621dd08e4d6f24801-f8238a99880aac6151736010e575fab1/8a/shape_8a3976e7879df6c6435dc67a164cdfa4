3906a4cb9a5cb07e74d782aa7736d510
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = shapeValidator;

var _isPlainObject = _interopRequireDefault(require("./helpers/isPlainObject"));

var _wrapValidator = _interopRequireDefault(require("./helpers/wrapValidator"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function shapeValidator(shapeTypes) {
  if (!(0, _isPlainObject["default"])(shapeTypes)) {
    throw new TypeError('shape must be a normal object');
  }

  function shape(props, propName, componentName, location) {
    var propValue = props[propName];

    if (propValue == null) {
      return null;
    }

    for (var _len = arguments.length, rest = new Array(_len > 4 ? _len - 4 : 0), _key = 4; _key < _len; _key++) {
      rest[_key - 4] = arguments[_key];
    }

    for (var key in shapeTypes) {
      var checker = shapeTypes[key];

      if (checker) {
        var error = checker.apply(void 0, [propValue, key, componentName, location].concat(rest));

        if (error) {
          return error;
        }
      }
    }

    return null;
  }

  shape.isRequired = function shapeRequired(props, propName, componentName) {
    var propValue = props[propName];

    if (propValue == null) {
      return new TypeError("".concat(componentName, ": ").concat(propName, " is required."));
    }

    for (var _len2 = arguments.length, rest = new Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {
      rest[_key2 - 3] = arguments[_key2];
    }

    return shape.apply(void 0, [props, propName, componentName].concat(rest));
  };

  return (0, _wrapValidator["default"])(shape, 'shape', shapeTypes);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9zaGFwZS5qcyJdLCJuYW1lcyI6WyJyZXN0IiwicHJvcFZhbHVlIiwicHJvcHMiLCJjaGVja2VyIiwic2hhcGVUeXBlcyIsImVycm9yIiwic2hhcGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxJQUFBLGNBQUEsR0FBQSxzQkFBQSxDQUFBLE9BQUEsMkJBQUEsQ0FBQTs7QUFDQSxJQUFBLGNBQUEsR0FBQSxzQkFBQSxDQUFBLE9BQUEsMkJBQUEsQ0FBQTs7Ozs7Ozs7QUFFZSxTQUFBLGNBQUEsQ0FBQSxVQUFBLEVBQW9DO0FBQ2pELE1BQUksQ0FBQyxDQUFBLEdBQUEsY0FBQSxDQUFBLFNBQUEsQ0FBQSxFQUFMLFVBQUssQ0FBTCxFQUFnQztBQUM5QixVQUFNLElBQUEsU0FBQSxDQUFOLCtCQUFNLENBQU47QUFDRDs7QUFFRCxXQUFBLEtBQUEsQ0FBQSxLQUFBLEVBQUEsUUFBQSxFQUFBLGFBQUEsRUFBQSxRQUFBLEVBQWtFO0FBQUEsUUFDNUNDLFNBRDRDLEdBQzlCQyxLQUQ4QixDQUFBLFFBQUEsQ0FBQTs7QUFFaEUsUUFBSUQsU0FBUyxJQUFiLElBQUEsRUFBdUI7QUFDckIsYUFBQSxJQUFBO0FBSDhEOztBQUFBLFNBQUEsSUFBQSxJQUFBLEdBQUEsU0FBQSxDQUFBLE1BQUEsRUFBTkQsSUFBTSxHQUFBLElBQUEsS0FBQSxDQUFBLElBQUEsR0FBQSxDQUFBLEdBQUEsSUFBQSxHQUFBLENBQUEsR0FBQSxDQUFBLENBQUEsRUFBQSxJQUFBLEdBQUEsQ0FBQSxFQUFBLElBQUEsR0FBQSxJQUFBLEVBQUEsSUFBQSxFQUFBLEVBQUE7QUFBTkEsTUFBQUEsSUFBTSxDQUFBLElBQUEsR0FBQSxDQUFBLENBQU5BLEdBQU0sU0FBQSxDQUFBLElBQUEsQ0FBTkE7QUFBTTs7QUFPaEUsU0FBSyxJQUFMLEdBQUEsSUFBQSxVQUFBLEVBQThCO0FBQzVCLFVBQU1HLE9BQU8sR0FBR0MsVUFBVSxDQUExQixHQUEwQixDQUExQjs7QUFDQSxVQUFBLE9BQUEsRUFBYTtBQUNYLFlBQU1DLEtBQUssR0FBR0YsT0FBTyxDQUFQQSxLQUFBQSxDQUFBQSxLQUFBQSxDQUFBQSxFQUFBQSxDQUFBQSxTQUFBQSxFQUFBQSxHQUFBQSxFQUFBQSxhQUFBQSxFQUFBQSxRQUFBQSxFQUFBQSxNQUFBQSxDQUFkLElBQWNBLENBQUFBLENBQWQ7O0FBT0EsWUFBQSxLQUFBLEVBQVc7QUFDVCxpQkFBQSxLQUFBO0FBQ0Q7QUFDRjtBQUNGOztBQUNELFdBQUEsSUFBQTtBQUNEOztBQUVERyxFQUFBQSxLQUFLLENBQUxBLFVBQUFBLEdBQW1CLFNBQUEsYUFBQSxDQUFBLEtBQUEsRUFBQSxRQUFBLEVBQUEsYUFBQSxFQUFnRTtBQUFBLFFBQzdETCxTQUQ2RCxHQUMvQ0MsS0FEK0MsQ0FBQSxRQUFBLENBQUE7O0FBRWpGLFFBQUlELFNBQVMsSUFBYixJQUFBLEVBQXVCO0FBQ3JCLGFBQU8sSUFBQSxTQUFBLENBQUEsR0FBQSxNQUFBLENBQUEsYUFBQSxFQUFBLElBQUEsRUFBQSxNQUFBLENBQUEsUUFBQSxFQUFQLGVBQU8sQ0FBQSxDQUFQO0FBQ0Q7O0FBSmdGLFNBQUEsSUFBQSxLQUFBLEdBQUEsU0FBQSxDQUFBLE1BQUEsRUFBTkQsSUFBTSxHQUFBLElBQUEsS0FBQSxDQUFBLEtBQUEsR0FBQSxDQUFBLEdBQUEsS0FBQSxHQUFBLENBQUEsR0FBQSxDQUFBLENBQUEsRUFBQSxLQUFBLEdBQUEsQ0FBQSxFQUFBLEtBQUEsR0FBQSxLQUFBLEVBQUEsS0FBQSxFQUFBLEVBQUE7QUFBTkEsTUFBQUEsSUFBTSxDQUFBLEtBQUEsR0FBQSxDQUFBLENBQU5BLEdBQU0sU0FBQSxDQUFBLEtBQUEsQ0FBTkE7QUFBTTs7QUFLakYsV0FBT00sS0FBSyxDQUFMQSxLQUFBQSxDQUFBQSxLQUFBQSxDQUFBQSxFQUFBQSxDQUFBQSxLQUFBQSxFQUFBQSxRQUFBQSxFQUFBQSxhQUFBQSxFQUFBQSxNQUFBQSxDQUFQLElBQU9BLENBQUFBLENBQVA7QUFMRkEsR0FBQUE7O0FBUUEsU0FBTyxDQUFBLEdBQUEsY0FBQSxDQUFBLFNBQUEsQ0FBQSxFQUFBLEtBQUEsRUFBQSxPQUFBLEVBQVAsVUFBTyxDQUFQO0FBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgaXNQbGFpbk9iamVjdCBmcm9tICcuL2hlbHBlcnMvaXNQbGFpbk9iamVjdCc7XG5pbXBvcnQgd3JhcFZhbGlkYXRvciBmcm9tICcuL2hlbHBlcnMvd3JhcFZhbGlkYXRvcic7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHNoYXBlVmFsaWRhdG9yKHNoYXBlVHlwZXMpIHtcbiAgaWYgKCFpc1BsYWluT2JqZWN0KHNoYXBlVHlwZXMpKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignc2hhcGUgbXVzdCBiZSBhIG5vcm1hbCBvYmplY3QnKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHNoYXBlKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIC4uLnJlc3QpIHtcbiAgICBjb25zdCB7IFtwcm9wTmFtZV06IHByb3BWYWx1ZSB9ID0gcHJvcHM7XG4gICAgaWYgKHByb3BWYWx1ZSA9PSBudWxsKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgLy8gY29kZSBhZGFwdGVkIGZyb20gUHJvcFR5cGVzLnNoYXBlOiBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVhY3QvYmxvYi8xNDE1NmU1NmI5Y2YxOGFjODY5NjMxODVjNWFmNGFiZGRmM2ZmODExL3NyYy9pc29tb3JwaGljL2NsYXNzaWMvdHlwZXMvUmVhY3RQcm9wVHlwZXMuanMjTDM4MVxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBndWFyZC1mb3ItaW4sIG5vLXJlc3RyaWN0ZWQtc3ludGF4XG4gICAgZm9yIChjb25zdCBrZXkgaW4gc2hhcGVUeXBlcykge1xuICAgICAgY29uc3QgY2hlY2tlciA9IHNoYXBlVHlwZXNba2V5XTtcbiAgICAgIGlmIChjaGVja2VyKSB7XG4gICAgICAgIGNvbnN0IGVycm9yID0gY2hlY2tlcihcbiAgICAgICAgICBwcm9wVmFsdWUsXG4gICAgICAgICAga2V5LFxuICAgICAgICAgIGNvbXBvbmVudE5hbWUsXG4gICAgICAgICAgbG9jYXRpb24sXG4gICAgICAgICAgLi4ucmVzdCxcbiAgICAgICAgKTtcbiAgICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgICAgcmV0dXJuIGVycm9yO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgc2hhcGUuaXNSZXF1aXJlZCA9IGZ1bmN0aW9uIHNoYXBlUmVxdWlyZWQocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCAuLi5yZXN0KSB7XG4gICAgY29uc3QgeyBbcHJvcE5hbWVdOiBwcm9wVmFsdWUgfSA9IHByb3BzO1xuICAgIGlmIChwcm9wVmFsdWUgPT0gbnVsbCkge1xuICAgICAgcmV0dXJuIG5ldyBUeXBlRXJyb3IoYCR7Y29tcG9uZW50TmFtZX06ICR7cHJvcE5hbWV9IGlzIHJlcXVpcmVkLmApO1xuICAgIH1cbiAgICByZXR1cm4gc2hhcGUocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCAuLi5yZXN0KTtcbiAgfTtcblxuICByZXR1cm4gd3JhcFZhbGlkYXRvcihzaGFwZSwgJ3NoYXBlJywgc2hhcGVUeXBlcyk7XG59XG4iXX0=