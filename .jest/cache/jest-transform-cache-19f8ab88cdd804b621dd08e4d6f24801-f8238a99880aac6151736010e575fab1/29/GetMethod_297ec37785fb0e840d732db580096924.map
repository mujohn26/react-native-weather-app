{"version":3,"sources":["GetMethod.js"],"names":["GetIntrinsic","require","$TypeError","GetV","IsCallable","IsPropertyKey","module","exports","GetMethod","O","P","func"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,mBAA1B;;AAEA,IAAIC,UAAU,GAAGF,YAAY,CAAC,aAAD,CAA7B;;AAEA,IAAIG,IAAI,GAAGF,OAAO,UAAlB;;AACA,IAAIG,UAAU,GAAGH,OAAO,gBAAxB;;AACA,IAAII,aAAa,GAAGJ,OAAO,mBAA3B;;AAYAK,MAAM,CAACC,OAAP,GAAiB,SAASC,SAAT,CAAmBC,CAAnB,EAAsBC,CAAtB,EAAyB;AAEzC,MAAI,CAACL,aAAa,CAACK,CAAD,CAAlB,EAAuB;AACtB,UAAM,IAAIR,UAAJ,CAAe,gDAAf,CAAN;AACA;;AAGD,MAAIS,IAAI,GAAGR,IAAI,CAACM,CAAD,EAAIC,CAAJ,CAAf;;AAGA,MAAIC,IAAI,IAAI,IAAZ,EAAkB;AACjB,WAAO,KAAK,CAAZ;AACA;;AAGD,MAAI,CAACP,UAAU,CAACO,IAAD,CAAf,EAAuB;AACtB,UAAM,IAAIT,UAAJ,CAAeQ,CAAC,GAAG,mBAAnB,CAAN;AACA;;AAGD,SAAOC,IAAP;AACA,CArBD","sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('../GetIntrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar GetV = require('./GetV');\nvar IsCallable = require('./IsCallable');\nvar IsPropertyKey = require('./IsPropertyKey');\n\n/**\n * 7.3.9 - https://ecma-international.org/ecma-262/6.0/#sec-getmethod\n * 1. Assert: IsPropertyKey(P) is true.\n * 2. Let func be GetV(O, P).\n * 3. ReturnIfAbrupt(func).\n * 4. If func is either undefined or null, return undefined.\n * 5. If IsCallable(func) is false, throw a TypeError exception.\n * 6. Return func.\n */\n\nmodule.exports = function GetMethod(O, P) {\n\t// 7.3.9.1\n\tif (!IsPropertyKey(P)) {\n\t\tthrow new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n\t}\n\n\t// 7.3.9.2\n\tvar func = GetV(O, P);\n\n\t// 7.3.9.4\n\tif (func == null) {\n\t\treturn void 0;\n\t}\n\n\t// 7.3.9.5\n\tif (!IsCallable(func)) {\n\t\tthrow new $TypeError(P + 'is not a function');\n\t}\n\n\t// 7.3.9.6\n\treturn func;\n};\n"]}