{"version":3,"sources":["../src/Utils.js"],"names":["animation","pointerEvents","auxClick","nativeToReactEventMap","compositionend","compositionstart","compositionupdate","keydown","keyup","keypress","contextmenu","dblclick","doubleclick","dragend","dragenter","dragexist","dragleave","dragover","dragstart","mousedown","mousemove","mouseout","mouseover","mouseup","touchcancel","touchend","touchmove","touchstart","canplay","canplaythrough","durationchange","loadeddata","loadedmetadata","loadstart","ratechange","timeupdate","volumechange","beforeinput","mouseenter","mouseleave","transitionend","animationstart","animationiteration","animationend","pointerdown","pointermove","pointerup","pointercancel","gotpointercapture","lostpointercapture","pointerenter","pointerleave","pointerover","pointerout","auxclick","eventOptions","nativeEvent","mapNativeEventNames","cleanup","global","result","fn","type","node","iteratorFn","obj","Symbol","getIteratorFn","Array","isIterable","flatArrs","isArrayLike","flatten","iterator","step","item","flatItem","key","recurse","elementToTree","arguments","el","props","ref","children","rendered","nodeType","nodeTypeFromType","error","ensureKeyOrUndefined","instance","isFound","found","mapper","finder","predicate","mapFind","findElement","getNodeType","getDisplayName","displayNameOfNode","tuples","RootFinder","x","name","closestComponent","i","catchingType","catchingInstance","componentDidCatch","getDerivedStateFromError","stateUpdate","componentStack","getComponentStack","unmaskedContext","isCustomComponent","options","tree","rootFinder","wrappingComponent","wrappingComponentProps","createElement","toTree","getMountWrapperInstance","getNode","render","moduleToImport"],"mappings":"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","sourcesContent":["import functionName from 'function.prototype.name';\nimport fromEntries from 'object.fromentries';\nimport createMountWrapper from './createMountWrapper';\nimport createRenderWrapper from './createRenderWrapper';\nimport wrap from './wrapWithSimpleWrapper';\nimport RootFinder from './RootFinder';\n\nexport {\n  createMountWrapper,\n  createRenderWrapper,\n  wrap,\n  RootFinder,\n};\n\nexport function mapNativeEventNames(event, {\n  animation = false, // should be true for React 15+\n  pointerEvents = false, // should be true for React 16.4+\n  auxClick = false, // should be true for React 16.5+\n} = {}) {\n  const nativeToReactEventMap = {\n    compositionend: 'compositionEnd',\n    compositionstart: 'compositionStart',\n    compositionupdate: 'compositionUpdate',\n    keydown: 'keyDown',\n    keyup: 'keyUp',\n    keypress: 'keyPress',\n    contextmenu: 'contextMenu',\n    dblclick: 'doubleClick',\n    doubleclick: 'doubleClick', // kept for legacy. TODO: remove with next major.\n    dragend: 'dragEnd',\n    dragenter: 'dragEnter',\n    dragexist: 'dragExit',\n    dragleave: 'dragLeave',\n    dragover: 'dragOver',\n    dragstart: 'dragStart',\n    mousedown: 'mouseDown',\n    mousemove: 'mouseMove',\n    mouseout: 'mouseOut',\n    mouseover: 'mouseOver',\n    mouseup: 'mouseUp',\n    touchcancel: 'touchCancel',\n    touchend: 'touchEnd',\n    touchmove: 'touchMove',\n    touchstart: 'touchStart',\n    canplay: 'canPlay',\n    canplaythrough: 'canPlayThrough',\n    durationchange: 'durationChange',\n    loadeddata: 'loadedData',\n    loadedmetadata: 'loadedMetadata',\n    loadstart: 'loadStart',\n    ratechange: 'rateChange',\n    timeupdate: 'timeUpdate',\n    volumechange: 'volumeChange',\n    beforeinput: 'beforeInput',\n    mouseenter: 'mouseEnter',\n    mouseleave: 'mouseLeave',\n    transitionend: 'transitionEnd',\n    ...(animation && {\n      animationstart: 'animationStart',\n      animationiteration: 'animationIteration',\n      animationend: 'animationEnd',\n    }),\n    ...(pointerEvents && {\n      pointerdown: 'pointerDown',\n      pointermove: 'pointerMove',\n      pointerup: 'pointerUp',\n      pointercancel: 'pointerCancel',\n      gotpointercapture: 'gotPointerCapture',\n      lostpointercapture: 'lostPointerCapture',\n      pointerenter: 'pointerEnter',\n      pointerleave: 'pointerLeave',\n      pointerover: 'pointerOver',\n      pointerout: 'pointerOut',\n    }),\n    ...(auxClick && {\n      auxclick: 'auxClick',\n    }),\n  };\n\n  return nativeToReactEventMap[event] || event;\n}\n\n// 'click' => 'onClick'\n// 'mouseEnter' => 'onMouseEnter'\nexport function propFromEvent(event, eventOptions = {}) {\n  const nativeEvent = mapNativeEventNames(event, eventOptions);\n  return `on${nativeEvent[0].toUpperCase()}${nativeEvent.slice(1)}`;\n}\n\nexport function withSetStateAllowed(fn) {\n  // NOTE(lmr):\n  // this is currently here to circumvent a React bug where `setState()` is\n  // not allowed without global being defined.\n  let cleanup = false;\n  if (typeof global.document === 'undefined') {\n    cleanup = true;\n    global.document = {};\n  }\n  const result = fn();\n  if (cleanup) {\n    // This works around a bug in node/jest in that developers aren't able to\n    // delete things from global when running in a node vm.\n    global.document = undefined;\n    delete global.document;\n  }\n  return result;\n}\n\nexport function assertDomAvailable(feature) {\n  if (!global || !global.document || !global.document.createElement) {\n    throw new Error(`Enzyme's ${feature} expects a DOM environment to be loaded, but found none`);\n  }\n}\n\nexport function displayNameOfNode(node) {\n  if (!node) return null;\n\n  const { type } = node;\n\n  if (!type) return null;\n\n  return type.displayName || (typeof type === 'function' ? functionName(type) : type.name || type);\n}\n\nexport function nodeTypeFromType(type) {\n  if (typeof type === 'string') {\n    return 'host';\n  }\n  if (type && type.prototype && type.prototype.isReactComponent) {\n    return 'class';\n  }\n  return 'function';\n}\n\nfunction getIteratorFn(obj) {\n  const iteratorFn = obj && (\n    (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' && obj[Symbol.iterator])\n    || obj['@@iterator']\n  );\n\n  if (typeof iteratorFn === 'function') {\n    return iteratorFn;\n  }\n\n  return undefined;\n}\n\nfunction isIterable(obj) {\n  return !!getIteratorFn(obj);\n}\n\nexport function isArrayLike(obj) {\n  return Array.isArray(obj) || (typeof obj !== 'string' && isIterable(obj));\n}\n\nexport function flatten(arrs) {\n  // optimize for the most common case\n  if (Array.isArray(arrs)) {\n    return arrs.reduce(\n      (flatArrs, item) => flatArrs.concat(isArrayLike(item) ? flatten(item) : item),\n      [],\n    );\n  }\n\n  // fallback for arbitrary iterable children\n  let flatArrs = [];\n\n  const iteratorFn = getIteratorFn(arrs);\n  const iterator = iteratorFn.call(arrs);\n\n  let step = iterator.next();\n\n  while (!step.done) {\n    const item = step.value;\n    let flatItem;\n\n    if (isArrayLike(item)) {\n      flatItem = flatten(item);\n    } else {\n      flatItem = item;\n    }\n\n    flatArrs = flatArrs.concat(flatItem);\n\n    step = iterator.next();\n  }\n\n  return flatArrs;\n}\n\nexport function ensureKeyOrUndefined(key) {\n  return key || (key === '' ? '' : undefined);\n}\n\nexport function elementToTree(el, recurse = elementToTree) {\n  if (typeof recurse !== 'function' && arguments.length === 3) {\n    // special case for backwards compat for `.map(elementToTree)`\n    recurse = elementToTree; // eslint-disable-line no-param-reassign\n  }\n  if (el === null || typeof el !== 'object' || !('type' in el)) {\n    return el;\n  }\n  const {\n    type,\n    props,\n    key,\n    ref,\n  } = el;\n  const { children } = props;\n  let rendered = null;\n  if (isArrayLike(children)) {\n    rendered = flatten(children).map((x) => recurse(x));\n  } else if (typeof children !== 'undefined') {\n    rendered = recurse(children);\n  }\n\n  const nodeType = nodeTypeFromType(type);\n\n  if (nodeType === 'host' && props.dangerouslySetInnerHTML) {\n    if (props.children != null) {\n      const error = new Error('Can only set one of `children` or `props.dangerouslySetInnerHTML`.');\n      error.name = 'Invariant Violation';\n      throw error;\n    }\n  }\n\n  return {\n    nodeType,\n    type,\n    props,\n    key: ensureKeyOrUndefined(key),\n    ref,\n    instance: null,\n    rendered,\n  };\n}\n\nfunction mapFind(arraylike, mapper, finder) {\n  let found;\n  const isFound = Array.prototype.find.call(arraylike, (item) => {\n    found = mapper(item);\n    return finder(found);\n  });\n  return isFound ? found : undefined;\n}\n\nexport function findElement(el, predicate) {\n  if (el === null || typeof el !== 'object' || !('type' in el)) {\n    return undefined;\n  }\n  if (predicate(el)) {\n    return el;\n  }\n  const { rendered } = el;\n  if (isArrayLike(rendered)) {\n    return mapFind(rendered, (x) => findElement(x, predicate), (x) => typeof x !== 'undefined');\n  }\n  return findElement(rendered, predicate);\n}\n\nexport function propsWithKeysAndRef(node) {\n  if (node.ref !== null || node.key !== null) {\n    return {\n      ...node.props,\n      key: node.key,\n      ref: node.ref,\n    };\n  }\n  return node.props;\n}\n\nexport function getComponentStack(\n  hierarchy,\n  getNodeType = nodeTypeFromType,\n  getDisplayName = displayNameOfNode,\n) {\n  const tuples = hierarchy.filter((node) => node.type !== RootFinder).map((x) => [\n    getNodeType(x.type),\n    getDisplayName(x),\n  ]).concat([[\n    'class',\n    'WrapperComponent',\n  ]]);\n\n  return tuples.map(([, name], i, arr) => {\n    const [, closestComponent] = arr.slice(i + 1).find(([nodeType]) => nodeType !== 'host') || [];\n    return `\\n    in ${name}${closestComponent ? ` (created by ${closestComponent})` : ''}`;\n  }).join('');\n}\n\nexport function simulateError(\n  error,\n  catchingInstance,\n  rootNode, // TODO: remove `rootNode` next semver-major\n  hierarchy,\n  getNodeType = nodeTypeFromType,\n  getDisplayName = displayNameOfNode,\n  catchingType = {},\n) {\n  const instance = catchingInstance || {};\n\n  const { componentDidCatch } = instance;\n\n  const { getDerivedStateFromError } = catchingType;\n\n  if (!componentDidCatch && !getDerivedStateFromError) {\n    throw error;\n  }\n\n  if (getDerivedStateFromError) {\n    const stateUpdate = getDerivedStateFromError.call(catchingType, error);\n    instance.setState(stateUpdate);\n  }\n\n  if (componentDidCatch) {\n    const componentStack = getComponentStack(hierarchy, getNodeType, getDisplayName);\n    componentDidCatch.call(instance, error, { componentStack });\n  }\n}\n\nexport function getMaskedContext(contextTypes, unmaskedContext) {\n  if (!contextTypes || !unmaskedContext) {\n    return {};\n  }\n  return fromEntries(Object.keys(contextTypes).map((key) => [key, unmaskedContext[key]]));\n}\n\nexport function getNodeFromRootFinder(isCustomComponent, tree, options) {\n  if (!isCustomComponent(options.wrappingComponent)) {\n    return tree.rendered;\n  }\n  const rootFinder = findElement(tree, (node) => node.type === RootFinder);\n  if (!rootFinder) {\n    throw new Error('`wrappingComponent` must render its children!');\n  }\n  return rootFinder.rendered;\n}\n\nexport function wrapWithWrappingComponent(createElement, node, options) {\n  const { wrappingComponent, wrappingComponentProps } = options;\n  if (!wrappingComponent) {\n    return node;\n  }\n  return createElement(\n    wrappingComponent,\n    wrappingComponentProps,\n    createElement(RootFinder, null, node),\n  );\n}\n\nexport function getWrappingComponentMountRenderer({ toTree, getMountWrapperInstance }) {\n  return {\n    getNode() {\n      const instance = getMountWrapperInstance();\n      return instance ? toTree(instance).rendered : null;\n    },\n    render(el, context, callback) {\n      const instance = getMountWrapperInstance();\n      if (!instance) {\n        throw new Error('The wrapping component may not be updated if the root is unmounted.');\n      }\n      return instance.setWrappingComponentProps(el.props, callback);\n    },\n  };\n}\n\nexport function fakeDynamicImport(moduleToImport) {\n  return Promise.resolve({ default: moduleToImport });\n}\n\nexport function compareNodeTypeOf(node, matchingTypeOf) {\n  if (!node) {\n    return false;\n  }\n  return node.$$typeof === matchingTypeOf;\n}\n"]}