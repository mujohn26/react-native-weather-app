8f53f63c2b29ec5097d2b58d760fdcad
exports.removeSubsets = function (nodes) {
  var idx = nodes.length,
      node,
      ancestor,
      replace;

  while (--idx > -1) {
    node = ancestor = nodes[idx];
    nodes[idx] = null;
    replace = true;

    while (ancestor) {
      if (nodes.indexOf(ancestor) > -1) {
        replace = false;
        nodes.splice(idx, 1);
        break;
      }

      ancestor = ancestor.parent;
    }

    if (replace) {
      nodes[idx] = node;
    }
  }

  return nodes;
};

var POSITION = {
  DISCONNECTED: 1,
  PRECEDING: 2,
  FOLLOWING: 4,
  CONTAINS: 8,
  CONTAINED_BY: 16
};

var comparePos = exports.compareDocumentPosition = function (nodeA, nodeB) {
  var aParents = [];
  var bParents = [];
  var current, sharedParent, siblings, aSibling, bSibling, idx;

  if (nodeA === nodeB) {
    return 0;
  }

  current = nodeA;

  while (current) {
    aParents.unshift(current);
    current = current.parent;
  }

  current = nodeB;

  while (current) {
    bParents.unshift(current);
    current = current.parent;
  }

  idx = 0;

  while (aParents[idx] === bParents[idx]) {
    idx++;
  }

  if (idx === 0) {
    return POSITION.DISCONNECTED;
  }

  sharedParent = aParents[idx - 1];
  siblings = sharedParent.children;
  aSibling = aParents[idx];
  bSibling = bParents[idx];

  if (siblings.indexOf(aSibling) > siblings.indexOf(bSibling)) {
    if (sharedParent === nodeB) {
      return POSITION.FOLLOWING | POSITION.CONTAINED_BY;
    }

    return POSITION.FOLLOWING;
  } else {
    if (sharedParent === nodeA) {
      return POSITION.PRECEDING | POSITION.CONTAINS;
    }

    return POSITION.PRECEDING;
  }
};

exports.uniqueSort = function (nodes) {
  var idx = nodes.length,
      node,
      position;
  nodes = nodes.slice();

  while (--idx > -1) {
    node = nodes[idx];
    position = nodes.indexOf(node);

    if (position > -1 && position < idx) {
      nodes.splice(idx, 1);
    }
  }

  nodes.sort(function (a, b) {
    var relative = comparePos(a, b);

    if (relative & POSITION.PRECEDING) {
      return -1;
    } else if (relative & POSITION.FOLLOWING) {
      return 1;
    }

    return 0;
  });
  return nodes;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,