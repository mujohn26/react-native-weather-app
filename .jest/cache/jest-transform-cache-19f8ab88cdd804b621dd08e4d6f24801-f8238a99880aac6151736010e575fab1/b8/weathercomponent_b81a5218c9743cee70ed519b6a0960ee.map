{"version":3,"sources":["weather.component.js"],"names":["Weather","props","state","weekDays","daysByHour","weatherData","list","map","day","dt","Date","date","hour","getHours","name","temp","Math","round","main","weather","forEach","obj","some","o","push","seasonStyle","currentWeather","styles","cloudSeasonStyle","rainSeasonStyle","sunSeasonStyle","container","uppContainer","imageHelper","image","currentDayStatUpper","text","seasonTitle","currentDayStatContainer","currentDayStat","temp_min","currentDayStatTitle","temp_max","downContainer","length","data","index","flexRow","alignItem","alignItemText","icons","Component","StyleSheet","create","flex","flexDirection","height","width","justifyContent","overflow","defaultSeasonStyle","backgroundColor","resizeMode","color","fontSize","fontWeight","textAlign","marginTop","marginLeft"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React, { Component } from \"react\";\nimport { StyleSheet, Text, View, ImageBackground, Image } from \"react-native\";\nimport cloudyImage from \"../assets/Images/forest_cloudy.png\"; \nimport { format } from \"date-fns\";\n\nimport imageHelper from \"../helpers/imageHelper\";\nimport seasonTitle from \"../helpers/seasonTittleHelper\";\n\n class Weather extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      weekDays: [],\n    };\n  }\n  UNSAFE_componentWillMount() {\n\n    const daysByHour = this.props.weatherData.list.map((day) => {\n      const dt = new Date(day.dt * 1000);\n      return {\n        date: dt,\n        hour: dt.getHours(),\n        name: format(dt, \"EEEE\"),\n        temp: Math.round(day.main.temp),\n        weather: day.weather[0].main,\n      };\n    }); \n    daysByHour.forEach((obj) => {\n      if (!this.state.weekDays.some((o) => o.name === obj.name)) {\n        this.state.weekDays.push({ ...obj });\n      }\n    });\n\n  }\n  render() {\n    let seasonStyle; \n    if(this.props.currentWeather.weather[0].main ===\"Clouds\"){\n      seasonStyle = styles.cloudSeasonStyle;\n    }\n    else if(this.props.currentWeather.weather[0].main ===\"Rain\"){\n      seasonStyle = styles.rainSeasonStyle;\n\n    }\n    else{\n      seasonStyle = styles.sunSeasonStyle;\n\n    }\n    return (\n      <View style={styles.container}>\n        <View style={styles.uppContainer}>\n          <ImageBackground\n            source={imageHelper[this.props.currentWeather.weather[0].main]}\n            style={styles.image}\n          >\n            <View>\n              <View style={styles.currentDayStatUpper}>\n                <Text style={styles.text}>\n                  {Math.round(this.props.currentWeather.main.temp)}째\n                </Text>\n                <Text style={styles.text}>\n                  {seasonTitle[this.props.currentWeather.weather[0].main]}\n                </Text>\n              </View>\n              <View style={styles.currentDayStatContainer}>\n                <View>\n                  <Text style={styles.currentDayStat}>\n                    {Math.round(this.props.currentWeather.main.temp_min)}째\n                  </Text>\n                  <Text style={styles.currentDayStatTitle}>Min</Text>\n                </View>\n                <View>\n                  <Text style={styles.currentDayStat}>\n                    {Math.round(this.props.currentWeather.main.temp)}째\n                  </Text>\n                  <Text style={styles.currentDayStatTitle}>Current</Text>\n                </View>\n                <View>\n                  <Text style={styles.currentDayStat}>\n                    {Math.round(this.props.currentWeather.main.temp_max)}째\n                  </Text>\n                  <Text style={styles.currentDayStatTitle}>Max</Text>\n                </View>\n              </View>\n            </View>\n          </ImageBackground>\n        </View>\n        <View style={[styles.downContainer, seasonStyle]} >\n          {this.state.weekDays.length != 0 ? (\n            this.state.weekDays.map((data, index) => {\n              return (\n                <View style={styles.flexRow} key={data.name}> \n                  <View style={styles.alignItem}>\n                    <Text style={styles.alignItemText}>{data.name}</Text>\n                  </View>\n                  <View style={styles.alignItem}>\n                    <Image\n                      style={styles.icons}\n                      source={\n                        imageHelper[\n                          data.weather === \"Rain\" ? \"rainIcon\" : \"sunnyIcon\"\n                        ]\n                      }\n                    />\n                  </View>\n                  <View style={styles.alignItem}>\n                    <Text style={styles.alignItemText}>\n                      {Math.round(data.temp)}째\n                    </Text>\n                  </View>\n                </View>\n              );\n            })\n          ) : (\n            <Text>Loading...</Text>\n          )}\n        </View>\n      </View>\n    );\n  }\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"column\",\n  },\n  uppContainer: {\n    height: 380,\n    width: 400,\n  },\n  downContainer: {\n    height: 370,\n    width: 400,\n    flex: 1,\n    flexDirection: \"column\",\n    justifyContent: \"space-evenly\",\n    overflow: \"scroll\",\n  },\n  defaultSeasonStyle:{\n    backgroundColor: \"#57575D\",\n\n  },\n  rainSeasonStyle:{\n    backgroundColor: \"#57575D\",\n\n  },\n  cloudSeasonStyle:{\n    backgroundColor: \"#54717A\",\n\n  },\n  sunSeasonStyle:{\n    backgroundColor: \"#47AB2F\",\n\n  },\n  image: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\",\n  },\n  text: {\n    color: \"white\",\n    fontSize: 42,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n  },\n  currentDayStat: {\n    textAlign: \"center\",\n    color: \"white\",\n    fontWeight: \"bold\",\n  },\n  currentDayStatTitle: {\n    color: \"white\",\n  },\n  currentDayStatUpper: {\n    marginTop: 60,\n  },\n  currentDayStatContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    marginTop: 110,\n  },\n  icons: {\n    height: 40,\n    width: 40,\n  },\n  flexRow: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    marginTop: 20,\n    width: \"100%\",\n  },\n  alignItem: {\n    textAlign: \"center\",\n    width: \"33%\",\n    marginLeft: 100,\n  },\n  alignItemText: {\n    color: \"white\",\n  },\n});\nexport default Weather;\n"]}