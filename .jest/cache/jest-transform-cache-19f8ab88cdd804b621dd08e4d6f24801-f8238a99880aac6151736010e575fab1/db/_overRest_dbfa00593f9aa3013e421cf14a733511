ab84e7a91325a735b0a2971d99e45227
var apply = require("./_apply");

var nativeMax = Math.max;

function overRest(func, start, transform) {
  start = nativeMax(start === undefined ? func.length - 1 : start, 0);
  return function () {
    var args = arguments,
        index = -1,
        length = nativeMax(args.length - start, 0),
        array = Array(length);

    while (++index < length) {
      array[index] = args[start + index];
    }

    index = -1;
    var otherArgs = Array(start + 1);

    while (++index < start) {
      otherArgs[index] = args[index];
    }

    otherArgs[start] = transform(array);
    return apply(func, this, otherArgs);
  };
}

module.exports = overRest;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9vdmVyUmVzdC5qcyJdLCJuYW1lcyI6WyJhcHBseSIsInJlcXVpcmUiLCJuYXRpdmVNYXgiLCJNYXRoIiwibWF4Iiwib3ZlclJlc3QiLCJmdW5jIiwic3RhcnQiLCJ0cmFuc2Zvcm0iLCJ1bmRlZmluZWQiLCJsZW5ndGgiLCJhcmdzIiwiYXJndW1lbnRzIiwiaW5kZXgiLCJhcnJheSIsIkFycmF5Iiwib3RoZXJBcmdzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsS0FBSyxHQUFHQyxPQUFPLFlBQW5COztBQUdBLElBQUlDLFNBQVMsR0FBR0MsSUFBSSxDQUFDQyxHQUFyQjs7QUFXQSxTQUFTQyxRQUFULENBQWtCQyxJQUFsQixFQUF3QkMsS0FBeEIsRUFBK0JDLFNBQS9CLEVBQTBDO0FBQ3hDRCxFQUFBQSxLQUFLLEdBQUdMLFNBQVMsQ0FBQ0ssS0FBSyxLQUFLRSxTQUFWLEdBQXVCSCxJQUFJLENBQUNJLE1BQUwsR0FBYyxDQUFyQyxHQUEwQ0gsS0FBM0MsRUFBa0QsQ0FBbEQsQ0FBakI7QUFDQSxTQUFPLFlBQVc7QUFDaEIsUUFBSUksSUFBSSxHQUFHQyxTQUFYO0FBQUEsUUFDSUMsS0FBSyxHQUFHLENBQUMsQ0FEYjtBQUFBLFFBRUlILE1BQU0sR0FBR1IsU0FBUyxDQUFDUyxJQUFJLENBQUNELE1BQUwsR0FBY0gsS0FBZixFQUFzQixDQUF0QixDQUZ0QjtBQUFBLFFBR0lPLEtBQUssR0FBR0MsS0FBSyxDQUFDTCxNQUFELENBSGpCOztBQUtBLFdBQU8sRUFBRUcsS0FBRixHQUFVSCxNQUFqQixFQUF5QjtBQUN2QkksTUFBQUEsS0FBSyxDQUFDRCxLQUFELENBQUwsR0FBZUYsSUFBSSxDQUFDSixLQUFLLEdBQUdNLEtBQVQsQ0FBbkI7QUFDRDs7QUFDREEsSUFBQUEsS0FBSyxHQUFHLENBQUMsQ0FBVDtBQUNBLFFBQUlHLFNBQVMsR0FBR0QsS0FBSyxDQUFDUixLQUFLLEdBQUcsQ0FBVCxDQUFyQjs7QUFDQSxXQUFPLEVBQUVNLEtBQUYsR0FBVU4sS0FBakIsRUFBd0I7QUFDdEJTLE1BQUFBLFNBQVMsQ0FBQ0gsS0FBRCxDQUFULEdBQW1CRixJQUFJLENBQUNFLEtBQUQsQ0FBdkI7QUFDRDs7QUFDREcsSUFBQUEsU0FBUyxDQUFDVCxLQUFELENBQVQsR0FBbUJDLFNBQVMsQ0FBQ00sS0FBRCxDQUE1QjtBQUNBLFdBQU9kLEtBQUssQ0FBQ00sSUFBRCxFQUFPLElBQVAsRUFBYVUsU0FBYixDQUFaO0FBQ0QsR0FoQkQ7QUFpQkQ7O0FBRURDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmIsUUFBakIiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXBwbHkgPSByZXF1aXJlKCcuL19hcHBseScpO1xuXG4vKiBCdWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcyBmb3IgdGhvc2Ugd2l0aCB0aGUgc2FtZSBuYW1lIGFzIG90aGVyIGBsb2Rhc2hgIG1ldGhvZHMuICovXG52YXIgbmF0aXZlTWF4ID0gTWF0aC5tYXg7XG5cbi8qKlxuICogQSBzcGVjaWFsaXplZCB2ZXJzaW9uIG9mIGBiYXNlUmVzdGAgd2hpY2ggdHJhbnNmb3JtcyB0aGUgcmVzdCBhcnJheS5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gYXBwbHkgYSByZXN0IHBhcmFtZXRlciB0by5cbiAqIEBwYXJhbSB7bnVtYmVyfSBbc3RhcnQ9ZnVuYy5sZW5ndGgtMV0gVGhlIHN0YXJ0IHBvc2l0aW9uIG9mIHRoZSByZXN0IHBhcmFtZXRlci5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IHRyYW5zZm9ybSBUaGUgcmVzdCBhcnJheSB0cmFuc2Zvcm0uXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIG5ldyBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gb3ZlclJlc3QoZnVuYywgc3RhcnQsIHRyYW5zZm9ybSkge1xuICBzdGFydCA9IG5hdGl2ZU1heChzdGFydCA9PT0gdW5kZWZpbmVkID8gKGZ1bmMubGVuZ3RoIC0gMSkgOiBzdGFydCwgMCk7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgYXJncyA9IGFyZ3VtZW50cyxcbiAgICAgICAgaW5kZXggPSAtMSxcbiAgICAgICAgbGVuZ3RoID0gbmF0aXZlTWF4KGFyZ3MubGVuZ3RoIC0gc3RhcnQsIDApLFxuICAgICAgICBhcnJheSA9IEFycmF5KGxlbmd0aCk7XG5cbiAgICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgICAgYXJyYXlbaW5kZXhdID0gYXJnc1tzdGFydCArIGluZGV4XTtcbiAgICB9XG4gICAgaW5kZXggPSAtMTtcbiAgICB2YXIgb3RoZXJBcmdzID0gQXJyYXkoc3RhcnQgKyAxKTtcbiAgICB3aGlsZSAoKytpbmRleCA8IHN0YXJ0KSB7XG4gICAgICBvdGhlckFyZ3NbaW5kZXhdID0gYXJnc1tpbmRleF07XG4gICAgfVxuICAgIG90aGVyQXJnc1tzdGFydF0gPSB0cmFuc2Zvcm0oYXJyYXkpO1xuICAgIHJldHVybiBhcHBseShmdW5jLCB0aGlzLCBvdGhlckFyZ3MpO1xuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IG92ZXJSZXN0O1xuIl19