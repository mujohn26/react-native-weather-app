{"version":3,"sources":["index.js"],"names":["Object","defineProperty","exports","value","default","getUTCWeek","_index","_interopRequireDefault","require","_index2","_index3","_index4","obj","__esModule","MILLISECONDS_IN_WEEK","dirtyDate","options","arguments","date","diff","getTime","Math","round","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,UAAlB;;AAEA,IAAIC,MAAM,GAAGC,sBAAsB,CAACC,OAAO,yBAAR,CAAnC;;AAEA,IAAIC,OAAO,GAAGF,sBAAsB,CAACC,OAAO,8BAAR,CAApC;;AAEA,IAAIE,OAAO,GAAGH,sBAAsB,CAACC,OAAO,kCAAR,CAApC;;AAEA,IAAIG,OAAO,GAAGJ,sBAAsB,CAACC,OAAO,4BAAR,CAApC;;AAEA,SAASD,sBAAT,CAAgCK,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAER,IAAAA,OAAO,EAAEQ;AAAX,GAArC;AAAwD;;AAE/F,IAAIE,oBAAoB,GAAG,SAA3B;;AAGA,SAAST,UAAT,CAAoBU,SAApB,EAA+BC,OAA/B,EAAwC;AACtC,GAAC,GAAGL,OAAO,CAACP,OAAZ,EAAqB,CAArB,EAAwBa,SAAxB;AACA,MAAIC,IAAI,GAAG,CAAC,GAAGZ,MAAM,CAACF,OAAX,EAAoBW,SAApB,CAAX;AACA,MAAII,IAAI,GAAG,CAAC,GAAGV,OAAO,CAACL,OAAZ,EAAqBc,IAArB,EAA2BF,OAA3B,EAAoCI,OAApC,KAAgD,CAAC,GAAGV,OAAO,CAACN,OAAZ,EAAqBc,IAArB,EAA2BF,OAA3B,EAAoCI,OAApC,EAA3D;AAIA,SAAOC,IAAI,CAACC,KAAL,CAAWH,IAAI,GAAGL,oBAAlB,IAA0C,CAAjD;AACD;;AAEDS,MAAM,CAACrB,OAAP,GAAiBA,OAAO,CAACE,OAAzB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getUTCWeek;\n\nvar _index = _interopRequireDefault(require(\"../../toDate/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../startOfUTCWeek/index.js\"));\n\nvar _index3 = _interopRequireDefault(require(\"../startOfUTCWeekYear/index.js\"));\n\nvar _index4 = _interopRequireDefault(require(\"../requiredArgs/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nfunction getUTCWeek(dirtyDate, options) {\n  (0, _index4.default)(1, arguments);\n  var date = (0, _index.default)(dirtyDate);\n  var diff = (0, _index2.default)(date, options).getTime() - (0, _index3.default)(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}\n\nmodule.exports = exports.default;"]}