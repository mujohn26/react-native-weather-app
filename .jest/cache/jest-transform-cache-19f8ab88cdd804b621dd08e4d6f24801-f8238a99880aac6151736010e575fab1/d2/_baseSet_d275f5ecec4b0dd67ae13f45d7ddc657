1a1b8804d82764be3963cba6a889c5b6
var assignValue = require("./_assignValue"),
    castPath = require("./_castPath"),
    isIndex = require("./_isIndex"),
    isObject = require("./isObject"),
    toKey = require("./_toKey");

function baseSet(object, path, value, customizer) {
  if (!isObject(object)) {
    return object;
  }

  path = castPath(path, object);
  var index = -1,
      length = path.length,
      lastIndex = length - 1,
      nested = object;

  while (nested != null && ++index < length) {
    var key = toKey(path[index]),
        newValue = value;

    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {
      return object;
    }

    if (index != lastIndex) {
      var objValue = nested[key];
      newValue = customizer ? customizer(objValue, key, nested) : undefined;

      if (newValue === undefined) {
        newValue = isObject(objValue) ? objValue : isIndex(path[index + 1]) ? [] : {};
      }
    }

    assignValue(nested, key, newValue);
    nested = nested[key];
  }

  return object;
}

module.exports = baseSet;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9iYXNlU2V0LmpzIl0sIm5hbWVzIjpbImFzc2lnblZhbHVlIiwicmVxdWlyZSIsImNhc3RQYXRoIiwiaXNJbmRleCIsImlzT2JqZWN0IiwidG9LZXkiLCJiYXNlU2V0Iiwib2JqZWN0IiwicGF0aCIsInZhbHVlIiwiY3VzdG9taXplciIsImluZGV4IiwibGVuZ3RoIiwibGFzdEluZGV4IiwibmVzdGVkIiwia2V5IiwibmV3VmFsdWUiLCJvYmpWYWx1ZSIsInVuZGVmaW5lZCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLElBQUlBLFdBQVcsR0FBR0MsT0FBTyxrQkFBekI7QUFBQSxJQUNJQyxRQUFRLEdBQUdELE9BQU8sZUFEdEI7QUFBQSxJQUVJRSxPQUFPLEdBQUdGLE9BQU8sY0FGckI7QUFBQSxJQUdJRyxRQUFRLEdBQUdILE9BQU8sY0FIdEI7QUFBQSxJQUlJSSxLQUFLLEdBQUdKLE9BQU8sWUFKbkI7O0FBZ0JBLFNBQVNLLE9BQVQsQ0FBaUJDLE1BQWpCLEVBQXlCQyxJQUF6QixFQUErQkMsS0FBL0IsRUFBc0NDLFVBQXRDLEVBQWtEO0FBQ2hELE1BQUksQ0FBQ04sUUFBUSxDQUFDRyxNQUFELENBQWIsRUFBdUI7QUFDckIsV0FBT0EsTUFBUDtBQUNEOztBQUNEQyxFQUFBQSxJQUFJLEdBQUdOLFFBQVEsQ0FBQ00sSUFBRCxFQUFPRCxNQUFQLENBQWY7QUFFQSxNQUFJSSxLQUFLLEdBQUcsQ0FBQyxDQUFiO0FBQUEsTUFDSUMsTUFBTSxHQUFHSixJQUFJLENBQUNJLE1BRGxCO0FBQUEsTUFFSUMsU0FBUyxHQUFHRCxNQUFNLEdBQUcsQ0FGekI7QUFBQSxNQUdJRSxNQUFNLEdBQUdQLE1BSGI7O0FBS0EsU0FBT08sTUFBTSxJQUFJLElBQVYsSUFBa0IsRUFBRUgsS0FBRixHQUFVQyxNQUFuQyxFQUEyQztBQUN6QyxRQUFJRyxHQUFHLEdBQUdWLEtBQUssQ0FBQ0csSUFBSSxDQUFDRyxLQUFELENBQUwsQ0FBZjtBQUFBLFFBQ0lLLFFBQVEsR0FBR1AsS0FEZjs7QUFHQSxRQUFJTSxHQUFHLEtBQUssV0FBUixJQUF1QkEsR0FBRyxLQUFLLGFBQS9CLElBQWdEQSxHQUFHLEtBQUssV0FBNUQsRUFBeUU7QUFDdkUsYUFBT1IsTUFBUDtBQUNEOztBQUVELFFBQUlJLEtBQUssSUFBSUUsU0FBYixFQUF3QjtBQUN0QixVQUFJSSxRQUFRLEdBQUdILE1BQU0sQ0FBQ0MsR0FBRCxDQUFyQjtBQUNBQyxNQUFBQSxRQUFRLEdBQUdOLFVBQVUsR0FBR0EsVUFBVSxDQUFDTyxRQUFELEVBQVdGLEdBQVgsRUFBZ0JELE1BQWhCLENBQWIsR0FBdUNJLFNBQTVEOztBQUNBLFVBQUlGLFFBQVEsS0FBS0UsU0FBakIsRUFBNEI7QUFDMUJGLFFBQUFBLFFBQVEsR0FBR1osUUFBUSxDQUFDYSxRQUFELENBQVIsR0FDUEEsUUFETyxHQUVOZCxPQUFPLENBQUNLLElBQUksQ0FBQ0csS0FBSyxHQUFHLENBQVQsQ0FBTCxDQUFQLEdBQTJCLEVBQTNCLEdBQWdDLEVBRnJDO0FBR0Q7QUFDRjs7QUFDRFgsSUFBQUEsV0FBVyxDQUFDYyxNQUFELEVBQVNDLEdBQVQsRUFBY0MsUUFBZCxDQUFYO0FBQ0FGLElBQUFBLE1BQU0sR0FBR0EsTUFBTSxDQUFDQyxHQUFELENBQWY7QUFDRDs7QUFDRCxTQUFPUixNQUFQO0FBQ0Q7O0FBRURZLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmQsT0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXNzaWduVmFsdWUgPSByZXF1aXJlKCcuL19hc3NpZ25WYWx1ZScpLFxuICAgIGNhc3RQYXRoID0gcmVxdWlyZSgnLi9fY2FzdFBhdGgnKSxcbiAgICBpc0luZGV4ID0gcmVxdWlyZSgnLi9faXNJbmRleCcpLFxuICAgIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9pc09iamVjdCcpLFxuICAgIHRvS2V5ID0gcmVxdWlyZSgnLi9fdG9LZXknKTtcblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5zZXRgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gbW9kaWZ5LlxuICogQHBhcmFtIHtBcnJheXxzdHJpbmd9IHBhdGggVGhlIHBhdGggb2YgdGhlIHByb3BlcnR5IHRvIHNldC5cbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHNldC5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IFtjdXN0b21pemVyXSBUaGUgZnVuY3Rpb24gdG8gY3VzdG9taXplIHBhdGggY3JlYXRpb24uXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIGBvYmplY3RgLlxuICovXG5mdW5jdGlvbiBiYXNlU2V0KG9iamVjdCwgcGF0aCwgdmFsdWUsIGN1c3RvbWl6ZXIpIHtcbiAgaWYgKCFpc09iamVjdChvYmplY3QpKSB7XG4gICAgcmV0dXJuIG9iamVjdDtcbiAgfVxuICBwYXRoID0gY2FzdFBhdGgocGF0aCwgb2JqZWN0KTtcblxuICB2YXIgaW5kZXggPSAtMSxcbiAgICAgIGxlbmd0aCA9IHBhdGgubGVuZ3RoLFxuICAgICAgbGFzdEluZGV4ID0gbGVuZ3RoIC0gMSxcbiAgICAgIG5lc3RlZCA9IG9iamVjdDtcblxuICB3aGlsZSAobmVzdGVkICE9IG51bGwgJiYgKytpbmRleCA8IGxlbmd0aCkge1xuICAgIHZhciBrZXkgPSB0b0tleShwYXRoW2luZGV4XSksXG4gICAgICAgIG5ld1ZhbHVlID0gdmFsdWU7XG5cbiAgICBpZiAoa2V5ID09PSAnX19wcm90b19fJyB8fCBrZXkgPT09ICdjb25zdHJ1Y3RvcicgfHwga2V5ID09PSAncHJvdG90eXBlJykge1xuICAgICAgcmV0dXJuIG9iamVjdDtcbiAgICB9XG5cbiAgICBpZiAoaW5kZXggIT0gbGFzdEluZGV4KSB7XG4gICAgICB2YXIgb2JqVmFsdWUgPSBuZXN0ZWRba2V5XTtcbiAgICAgIG5ld1ZhbHVlID0gY3VzdG9taXplciA/IGN1c3RvbWl6ZXIob2JqVmFsdWUsIGtleSwgbmVzdGVkKSA6IHVuZGVmaW5lZDtcbiAgICAgIGlmIChuZXdWYWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIG5ld1ZhbHVlID0gaXNPYmplY3Qob2JqVmFsdWUpXG4gICAgICAgICAgPyBvYmpWYWx1ZVxuICAgICAgICAgIDogKGlzSW5kZXgocGF0aFtpbmRleCArIDFdKSA/IFtdIDoge30pO1xuICAgICAgfVxuICAgIH1cbiAgICBhc3NpZ25WYWx1ZShuZXN0ZWQsIGtleSwgbmV3VmFsdWUpO1xuICAgIG5lc3RlZCA9IG5lc3RlZFtrZXldO1xuICB9XG4gIHJldHVybiBvYmplY3Q7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYmFzZVNldDtcbiJdfQ==