5fd175e7452560da3a9880e76bb0bb34
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = andValidator;

var _wrapValidator = _interopRequireDefault(require("./helpers/wrapValidator"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function andValidator(validators) {
  var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'and';

  if (!Array.isArray(validators)) {
    throw new TypeError('and: 2 or more validators are required');
  }

  if (validators.length <= 1) {
    throw new RangeError('and: 2 or more validators are required');
  }

  var validator = function and() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var firstError = null;
    validators.some(function (validatorFn) {
      firstError = validatorFn.apply(void 0, args);
      return firstError != null;
    });
    return firstError == null ? null : firstError;
  };

  validator.isRequired = function andIsRequired() {
    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    var firstError = null;
    validators.some(function (validatorFn) {
      firstError = validatorFn.isRequired.apply(validatorFn, args);
      return firstError != null;
    });
    return firstError == null ? null : firstError;
  };

  return (0, _wrapValidator["default"])(validator, name, validators);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9hbmQuanMiXSwibmFtZXMiOlsibmFtZSIsIkFycmF5IiwidmFsaWRhdG9ycyIsInZhbGlkYXRvciIsImFyZ3MiLCJmaXJzdEVycm9yIiwidmFsaWRhdG9yRm4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxJQUFBLGNBQUEsR0FBQSxzQkFBQSxDQUFBLE9BQUEsMkJBQUEsQ0FBQTs7Ozs7Ozs7QUFFZSxTQUFBLFlBQUEsQ0FBQSxVQUFBLEVBQWdEO0FBQUEsTUFBZEEsSUFBYyxHQUFBLFNBQUEsQ0FBQSxNQUFBLEdBQUEsQ0FBQSxJQUFBLFNBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQSxTQUFBLEdBQUEsU0FBQSxDQUFBLENBQUEsQ0FBQSxHQUFQLEtBQU87O0FBQzdELE1BQUksQ0FBQ0MsS0FBSyxDQUFMQSxPQUFBQSxDQUFMLFVBQUtBLENBQUwsRUFBZ0M7QUFDOUIsVUFBTSxJQUFBLFNBQUEsQ0FBTix3Q0FBTSxDQUFOO0FBQ0Q7O0FBQ0QsTUFBSUMsVUFBVSxDQUFWQSxNQUFBQSxJQUFKLENBQUEsRUFBNEI7QUFDMUIsVUFBTSxJQUFBLFVBQUEsQ0FBTix3Q0FBTSxDQUFOO0FBQ0Q7O0FBRUQsTUFBTUMsU0FBUyxHQUFHLFNBQUEsR0FBQSxHQUFzQjtBQUFBLFNBQUEsSUFBQSxJQUFBLEdBQUEsU0FBQSxDQUFBLE1BQUEsRUFBTkMsSUFBTSxHQUFBLElBQUEsS0FBQSxDQUFBLElBQUEsQ0FBQSxFQUFBLElBQUEsR0FBQSxDQUFBLEVBQUEsSUFBQSxHQUFBLElBQUEsRUFBQSxJQUFBLEVBQUEsRUFBQTtBQUFOQSxNQUFBQSxJQUFNLENBQUEsSUFBQSxDQUFOQSxHQUFNLFNBQUEsQ0FBQSxJQUFBLENBQU5BO0FBQU07O0FBQ3RDLFFBQUlDLFVBQVUsR0FBZCxJQUFBO0FBQ0FILElBQUFBLFVBQVUsQ0FBVkEsSUFBQUEsQ0FBZ0IsVUFBQSxXQUFBLEVBQWlCO0FBQy9CRyxNQUFBQSxVQUFVLEdBQUdDLFdBQVcsQ0FBWEEsS0FBQUEsQ0FBQUEsS0FBQUEsQ0FBQUEsRUFBYkQsSUFBYUMsQ0FBYkQ7QUFDQSxhQUFPQSxVQUFVLElBQWpCLElBQUE7QUFGRkgsS0FBQUE7QUFJQSxXQUFPRyxVQUFVLElBQVZBLElBQUFBLEdBQUFBLElBQUFBLEdBQVAsVUFBQTtBQU5GLEdBQUE7O0FBU0FGLEVBQUFBLFNBQVMsQ0FBVEEsVUFBQUEsR0FBdUIsU0FBQSxhQUFBLEdBQWdDO0FBQUEsU0FBQSxJQUFBLEtBQUEsR0FBQSxTQUFBLENBQUEsTUFBQSxFQUFOQyxJQUFNLEdBQUEsSUFBQSxLQUFBLENBQUEsS0FBQSxDQUFBLEVBQUEsS0FBQSxHQUFBLENBQUEsRUFBQSxLQUFBLEdBQUEsS0FBQSxFQUFBLEtBQUEsRUFBQSxFQUFBO0FBQU5BLE1BQUFBLElBQU0sQ0FBQSxLQUFBLENBQU5BLEdBQU0sU0FBQSxDQUFBLEtBQUEsQ0FBTkE7QUFBTTs7QUFDckQsUUFBSUMsVUFBVSxHQUFkLElBQUE7QUFDQUgsSUFBQUEsVUFBVSxDQUFWQSxJQUFBQSxDQUFnQixVQUFBLFdBQUEsRUFBaUI7QUFDL0JHLE1BQUFBLFVBQVUsR0FBR0MsV0FBVyxDQUFYQSxVQUFBQSxDQUFBQSxLQUFBQSxDQUFBQSxXQUFBQSxFQUFiRCxJQUFhQyxDQUFiRDtBQUNBLGFBQU9BLFVBQVUsSUFBakIsSUFBQTtBQUZGSCxLQUFBQTtBQUlBLFdBQU9HLFVBQVUsSUFBVkEsSUFBQUEsR0FBQUEsSUFBQUEsR0FBUCxVQUFBO0FBTkZGLEdBQUFBOztBQVNBLFNBQU8sQ0FBQSxHQUFBLGNBQUEsQ0FBQSxTQUFBLENBQUEsRUFBQSxTQUFBLEVBQUEsSUFBQSxFQUFQLFVBQU8sQ0FBUDtBQUNEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHdyYXBWYWxpZGF0b3IgZnJvbSAnLi9oZWxwZXJzL3dyYXBWYWxpZGF0b3InO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBhbmRWYWxpZGF0b3IodmFsaWRhdG9ycywgbmFtZSA9ICdhbmQnKSB7XG4gIGlmICghQXJyYXkuaXNBcnJheSh2YWxpZGF0b3JzKSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2FuZDogMiBvciBtb3JlIHZhbGlkYXRvcnMgYXJlIHJlcXVpcmVkJyk7XG4gIH1cbiAgaWYgKHZhbGlkYXRvcnMubGVuZ3RoIDw9IDEpIHtcbiAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignYW5kOiAyIG9yIG1vcmUgdmFsaWRhdG9ycyBhcmUgcmVxdWlyZWQnKTtcbiAgfVxuXG4gIGNvbnN0IHZhbGlkYXRvciA9IGZ1bmN0aW9uIGFuZCguLi5hcmdzKSB7XG4gICAgbGV0IGZpcnN0RXJyb3IgPSBudWxsO1xuICAgIHZhbGlkYXRvcnMuc29tZSgodmFsaWRhdG9yRm4pID0+IHtcbiAgICAgIGZpcnN0RXJyb3IgPSB2YWxpZGF0b3JGbiguLi5hcmdzKTtcbiAgICAgIHJldHVybiBmaXJzdEVycm9yICE9IG51bGw7XG4gICAgfSk7XG4gICAgcmV0dXJuIGZpcnN0RXJyb3IgPT0gbnVsbCA/IG51bGwgOiBmaXJzdEVycm9yO1xuICB9O1xuXG4gIHZhbGlkYXRvci5pc1JlcXVpcmVkID0gZnVuY3Rpb24gYW5kSXNSZXF1aXJlZCguLi5hcmdzKSB7XG4gICAgbGV0IGZpcnN0RXJyb3IgPSBudWxsO1xuICAgIHZhbGlkYXRvcnMuc29tZSgodmFsaWRhdG9yRm4pID0+IHtcbiAgICAgIGZpcnN0RXJyb3IgPSB2YWxpZGF0b3JGbi5pc1JlcXVpcmVkKC4uLmFyZ3MpO1xuICAgICAgcmV0dXJuIGZpcnN0RXJyb3IgIT0gbnVsbDtcbiAgICB9KTtcbiAgICByZXR1cm4gZmlyc3RFcnJvciA9PSBudWxsID8gbnVsbCA6IGZpcnN0RXJyb3I7XG4gIH07XG5cbiAgcmV0dXJuIHdyYXBWYWxpZGF0b3IodmFsaWRhdG9yLCBuYW1lLCB2YWxpZGF0b3JzKTtcbn1cbiJdfQ==