218649edb0883eaf52a8a86ed9270c1a
var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.mapStateToProps = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _react = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _reactRedux = require("react-redux");

var _weather = _interopRequireDefault(require("./weather.component"));

var _Loader = _interopRequireDefault(require("../helpers/Loader"));

var _weatherAction = require("../redux/actions/weatherAction");

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var App = function (_Component) {
  (0, _inherits2.default)(App, _Component);

  var _super = _createSuper(App);

  function App(props) {
    var _this;

    (0, _classCallCheck2.default)(this, App);
    _this = _super.call(this, props);
    _this.state = {
      lat: "",
      lan: ""
    };
    return _this;
  }

  (0, _createClass2.default)(App, [{
    key: "UNSAFE_componentWillMount",
    value: function UNSAFE_componentWillMount() {
      var getWeather = this.props.getWeather;
      getWeather();
    }
  }, {
    key: "render",
    value: function render() {
      return _react.default.createElement(_reactNative.View, {
        style: styles.container
      }, this.props.currentWeather != null ? _react.default.createElement(_weather.default, {
        currentWeather: this.props.currentWeather,
        weatherData: this.props.weatherData
      }) : _react.default.createElement(_Loader.default, null));
    }
  }]);
  return App;
}(_react.Component);

var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#fff',
    alignItems: 'center',
    justifyContent: 'center'
  }
});

var mapStateToProps = function mapStateToProps(state) {
  return {
    currentWeather: state.weatherReducer.weather,
    weatherData: state.weatherReducer.data
  };
};

exports.mapStateToProps = mapStateToProps;
var connectedAppScreen = (0, _reactRedux.connect)(mapStateToProps, {
  getWeather: _weatherAction.getWeather,
  getWeatherSuccess: _weatherAction.getWeatherSuccess,
  getWeatherFailure: _weatherAction.getWeatherFailure
})(App);
var _default = connectedAppScreen;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkFwcC5jb21wb25lbnQuanMiXSwibmFtZXMiOlsiQXBwIiwicHJvcHMiLCJzdGF0ZSIsImxhdCIsImxhbiIsImdldFdlYXRoZXIiLCJzdHlsZXMiLCJjb250YWluZXIiLCJjdXJyZW50V2VhdGhlciIsIndlYXRoZXJEYXRhIiwiQ29tcG9uZW50IiwiU3R5bGVTaGVldCIsImNyZWF0ZSIsImZsZXgiLCJiYWNrZ3JvdW5kQ29sb3IiLCJhbGlnbkl0ZW1zIiwianVzdGlmeUNvbnRlbnQiLCJtYXBTdGF0ZVRvUHJvcHMiLCJ3ZWF0aGVyUmVkdWNlciIsIndlYXRoZXIiLCJkYXRhIiwiY29ubmVjdGVkQXBwU2NyZWVuIiwiZ2V0V2VhdGhlclN1Y2Nlc3MiLCJnZXRXZWF0aGVyRmFpbHVyZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7SUFFT0EsRzs7Ozs7QUFDSCxlQUFZQyxLQUFaLEVBQW1CO0FBQUE7O0FBQUE7QUFDZiw4QkFBTUEsS0FBTjtBQUNBLFVBQUtDLEtBQUwsR0FBYTtBQUNoQkMsTUFBQUEsR0FBRyxFQUFDLEVBRFk7QUFFaEJDLE1BQUFBLEdBQUcsRUFBQztBQUZZLEtBQWI7QUFGZTtBQU1sQjs7OztnREFDMEI7QUFBQSxVQUNsQkMsVUFEa0IsR0FDSixLQUFLSixLQURELENBQ2xCSSxVQURrQjtBQUd6QkEsTUFBQUEsVUFBVTtBQUNiOzs7NkJBQ087QUFDUixhQUNFLDZCQUFDLGlCQUFEO0FBQU0sUUFBQSxLQUFLLEVBQUVDLE1BQU0sQ0FBQ0M7QUFBcEIsU0FDRSxLQUFLTixLQUFMLENBQVdPLGNBQVgsSUFBMkIsSUFBM0IsR0FBZ0MsNkJBQUMsZ0JBQUQ7QUFBUyxRQUFBLGNBQWMsRUFBRSxLQUFLUCxLQUFMLENBQVdPLGNBQXBDO0FBQW9ELFFBQUEsV0FBVyxFQUFFLEtBQUtQLEtBQUwsQ0FBV1E7QUFBNUUsUUFBaEMsR0FBMkgsNkJBQUMsZUFBRCxPQUQ3SCxDQURGO0FBSUc7OztFQWxCY0MsZ0I7O0FBb0JuQixJQUFNSixNQUFNLEdBQUdLLHdCQUFXQyxNQUFYLENBQWtCO0FBQy9CTCxFQUFBQSxTQUFTLEVBQUU7QUFDVE0sSUFBQUEsSUFBSSxFQUFFLENBREc7QUFFVEMsSUFBQUEsZUFBZSxFQUFFLE1BRlI7QUFHVEMsSUFBQUEsVUFBVSxFQUFFLFFBSEg7QUFJVEMsSUFBQUEsY0FBYyxFQUFFO0FBSlA7QUFEb0IsQ0FBbEIsQ0FBZjs7QUFRTyxJQUFNQyxlQUFlLEdBQUcsU0FBbEJBLGVBQWtCLENBQUNmLEtBQUQsRUFBVztBQUN0QyxTQUFPO0FBQ0xNLElBQUFBLGNBQWMsRUFBRU4sS0FBSyxDQUFDZ0IsY0FBTixDQUFxQkMsT0FEaEM7QUFFTFYsSUFBQUEsV0FBVyxFQUFDUCxLQUFLLENBQUNnQixjQUFOLENBQXFCRTtBQUY1QixHQUFQO0FBSUQsQ0FMSTs7O0FBTVAsSUFBTUMsa0JBQWtCLEdBQUcseUJBQVFKLGVBQVIsRUFBeUI7QUFDaERaLEVBQUFBLFVBQVUsRUFBVkEseUJBRGdEO0FBQ3JDaUIsRUFBQUEsaUJBQWlCLEVBQWpCQSxnQ0FEcUM7QUFDbkJDLEVBQUFBLGlCQUFpQixFQUFqQkE7QUFEbUIsQ0FBekIsRUFFeEJ2QixHQUZ3QixDQUEzQjtlQUllcUIsa0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3Qse0NvbXBvbmVudH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgU3R5bGVTaGVldCwgVGV4dCwgVmlldyB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5pbXBvcnQge2Nvbm5lY3R9IGZyb20gJ3JlYWN0LXJlZHV4JztcbmltcG9ydCBXZWF0aGVyIGZyb20gJy4vd2VhdGhlci5jb21wb25lbnQnO1xuaW1wb3J0IExvYWRpbmcgZnJvbSAnLi4vaGVscGVycy9Mb2FkZXInO1xuaW1wb3J0IHtnZXRXZWF0aGVyLGdldFdlYXRoZXJTdWNjZXNzLGdldFdlYXRoZXJGYWlsdXJlfSBmcm9tICcuLi9yZWR1eC9hY3Rpb25zL3dlYXRoZXJBY3Rpb24nO1xuIFxuY2xhc3MgIEFwcCBleHRlbmRzIENvbXBvbmVudHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgIGxhdDpcIlwiLFxuICAgICBsYW46XCJcIlxuICAgICAgfVxuICAgIH1cbiAgICBVTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCl7XG4gICAgICBjb25zdCB7Z2V0V2VhdGhlcn0gPSB0aGlzLnByb3BzO1xuICAgICAgLy8gY29uc3Qge2xhdCxsYW59PXRoaXMuc3RhdGU7XG4gICAgICBnZXRXZWF0aGVyKCk7XG4gIH1cbiAgcmVuZGVyKCl7XG4gIHJldHVybiAoIFxuICAgIDxWaWV3IHN0eWxlPXtzdHlsZXMuY29udGFpbmVyfT5cbiAgICAge3RoaXMucHJvcHMuY3VycmVudFdlYXRoZXIhPW51bGw/PFdlYXRoZXIgY3VycmVudFdlYXRoZXI9e3RoaXMucHJvcHMuY3VycmVudFdlYXRoZXJ9IHdlYXRoZXJEYXRhPXt0aGlzLnByb3BzLndlYXRoZXJEYXRhfS8+OjxMb2FkaW5nLz59XG4gICAgPC9WaWV3PlxuICApO31cbn1cbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgY29udGFpbmVyOiB7XG4gICAgZmxleDogMSwgXG4gICAgYmFja2dyb3VuZENvbG9yOiAnI2ZmZicsXG4gICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxuICB9LFxufSk7XG5leHBvcnQgY29uc3QgbWFwU3RhdGVUb1Byb3BzID0gKHN0YXRlKSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGN1cnJlbnRXZWF0aGVyOiBzdGF0ZS53ZWF0aGVyUmVkdWNlci53ZWF0aGVyLFxuICAgICAgd2VhdGhlckRhdGE6c3RhdGUud2VhdGhlclJlZHVjZXIuZGF0YVxuICAgIH07XG4gIH07XG5jb25zdCBjb25uZWN0ZWRBcHBTY3JlZW4gPSBjb25uZWN0KG1hcFN0YXRlVG9Qcm9wcywge1xuICAgIGdldFdlYXRoZXIsZ2V0V2VhdGhlclN1Y2Nlc3MsZ2V0V2VhdGhlckZhaWx1cmVcbn0pKEFwcCk7XG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3RlZEFwcFNjcmVlbjsiXX0=