b148c51e05a6b1b79b1e7549ee89fdce
'use strict';

var GetIntrinsic = require("../GetIntrinsic");

var $TypeError = GetIntrinsic('%TypeError%');

var Call = require("./Call");

var GetMethod = require("./GetMethod");

var IsCallable = require("./IsCallable");

var Type = require("./Type");

module.exports = function IteratorClose(iterator, completion) {
  if (Type(iterator) !== 'Object') {
    throw new $TypeError('Assertion failed: Type(iterator) is not Object');
  }

  if (!IsCallable(completion)) {
    throw new $TypeError('Assertion failed: completion is not a thunk for a Completion Record');
  }

  var completionThunk = completion;
  var iteratorReturn = GetMethod(iterator, 'return');

  if (typeof iteratorReturn === 'undefined') {
    return completionThunk();
  }

  var completionRecord;

  try {
    var innerResult = Call(iteratorReturn, iterator, []);
  } catch (e) {
    completionThunk();
    completionThunk = null;
    throw e;
  }

  completionRecord = completionThunk();
  completionThunk = null;

  if (Type(innerResult) !== 'Object') {
    throw new $TypeError('iterator .return must return an object');
  }

  return completionRecord;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkl0ZXJhdG9yQ2xvc2UuanMiXSwibmFtZXMiOlsiR2V0SW50cmluc2ljIiwicmVxdWlyZSIsIiRUeXBlRXJyb3IiLCJDYWxsIiwiR2V0TWV0aG9kIiwiSXNDYWxsYWJsZSIsIlR5cGUiLCJtb2R1bGUiLCJleHBvcnRzIiwiSXRlcmF0b3JDbG9zZSIsIml0ZXJhdG9yIiwiY29tcGxldGlvbiIsImNvbXBsZXRpb25UaHVuayIsIml0ZXJhdG9yUmV0dXJuIiwiY29tcGxldGlvblJlY29yZCIsImlubmVyUmVzdWx0IiwiZSJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsSUFBSUEsWUFBWSxHQUFHQyxPQUFPLG1CQUExQjs7QUFFQSxJQUFJQyxVQUFVLEdBQUdGLFlBQVksQ0FBQyxhQUFELENBQTdCOztBQUVBLElBQUlHLElBQUksR0FBR0YsT0FBTyxVQUFsQjs7QUFDQSxJQUFJRyxTQUFTLEdBQUdILE9BQU8sZUFBdkI7O0FBQ0EsSUFBSUksVUFBVSxHQUFHSixPQUFPLGdCQUF4Qjs7QUFDQSxJQUFJSyxJQUFJLEdBQUdMLE9BQU8sVUFBbEI7O0FBSUFNLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixTQUFTQyxhQUFULENBQXVCQyxRQUF2QixFQUFpQ0MsVUFBakMsRUFBNkM7QUFDN0QsTUFBSUwsSUFBSSxDQUFDSSxRQUFELENBQUosS0FBbUIsUUFBdkIsRUFBaUM7QUFDaEMsVUFBTSxJQUFJUixVQUFKLENBQWUsZ0RBQWYsQ0FBTjtBQUNBOztBQUNELE1BQUksQ0FBQ0csVUFBVSxDQUFDTSxVQUFELENBQWYsRUFBNkI7QUFDNUIsVUFBTSxJQUFJVCxVQUFKLENBQWUscUVBQWYsQ0FBTjtBQUNBOztBQUNELE1BQUlVLGVBQWUsR0FBR0QsVUFBdEI7QUFFQSxNQUFJRSxjQUFjLEdBQUdULFNBQVMsQ0FBQ00sUUFBRCxFQUFXLFFBQVgsQ0FBOUI7O0FBRUEsTUFBSSxPQUFPRyxjQUFQLEtBQTBCLFdBQTlCLEVBQTJDO0FBQzFDLFdBQU9ELGVBQWUsRUFBdEI7QUFDQTs7QUFFRCxNQUFJRSxnQkFBSjs7QUFDQSxNQUFJO0FBQ0gsUUFBSUMsV0FBVyxHQUFHWixJQUFJLENBQUNVLGNBQUQsRUFBaUJILFFBQWpCLEVBQTJCLEVBQTNCLENBQXRCO0FBQ0EsR0FGRCxDQUVFLE9BQU9NLENBQVAsRUFBVTtBQUlYSixJQUFBQSxlQUFlO0FBQ2ZBLElBQUFBLGVBQWUsR0FBRyxJQUFsQjtBQUdBLFVBQU1JLENBQU47QUFDQTs7QUFDREYsRUFBQUEsZ0JBQWdCLEdBQUdGLGVBQWUsRUFBbEM7QUFDQUEsRUFBQUEsZUFBZSxHQUFHLElBQWxCOztBQUVBLE1BQUlOLElBQUksQ0FBQ1MsV0FBRCxDQUFKLEtBQXNCLFFBQTFCLEVBQW9DO0FBQ25DLFVBQU0sSUFBSWIsVUFBSixDQUFlLHdDQUFmLENBQU47QUFDQTs7QUFFRCxTQUFPWSxnQkFBUDtBQUNBLENBcENEIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgR2V0SW50cmluc2ljID0gcmVxdWlyZSgnLi4vR2V0SW50cmluc2ljJyk7XG5cbnZhciAkVHlwZUVycm9yID0gR2V0SW50cmluc2ljKCclVHlwZUVycm9yJScpO1xuXG52YXIgQ2FsbCA9IHJlcXVpcmUoJy4vQ2FsbCcpO1xudmFyIEdldE1ldGhvZCA9IHJlcXVpcmUoJy4vR2V0TWV0aG9kJyk7XG52YXIgSXNDYWxsYWJsZSA9IHJlcXVpcmUoJy4vSXNDYWxsYWJsZScpO1xudmFyIFR5cGUgPSByZXF1aXJlKCcuL1R5cGUnKTtcblxuLy8gaHR0cHM6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzYuMC8jc2VjLWl0ZXJhdG9yY2xvc2VcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBJdGVyYXRvckNsb3NlKGl0ZXJhdG9yLCBjb21wbGV0aW9uKSB7XG5cdGlmIChUeXBlKGl0ZXJhdG9yKSAhPT0gJ09iamVjdCcpIHtcblx0XHR0aHJvdyBuZXcgJFR5cGVFcnJvcignQXNzZXJ0aW9uIGZhaWxlZDogVHlwZShpdGVyYXRvcikgaXMgbm90IE9iamVjdCcpO1xuXHR9XG5cdGlmICghSXNDYWxsYWJsZShjb21wbGV0aW9uKSkge1xuXHRcdHRocm93IG5ldyAkVHlwZUVycm9yKCdBc3NlcnRpb24gZmFpbGVkOiBjb21wbGV0aW9uIGlzIG5vdCBhIHRodW5rIGZvciBhIENvbXBsZXRpb24gUmVjb3JkJyk7XG5cdH1cblx0dmFyIGNvbXBsZXRpb25UaHVuayA9IGNvbXBsZXRpb247XG5cblx0dmFyIGl0ZXJhdG9yUmV0dXJuID0gR2V0TWV0aG9kKGl0ZXJhdG9yLCAncmV0dXJuJyk7XG5cblx0aWYgKHR5cGVvZiBpdGVyYXRvclJldHVybiA9PT0gJ3VuZGVmaW5lZCcpIHtcblx0XHRyZXR1cm4gY29tcGxldGlvblRodW5rKCk7XG5cdH1cblxuXHR2YXIgY29tcGxldGlvblJlY29yZDtcblx0dHJ5IHtcblx0XHR2YXIgaW5uZXJSZXN1bHQgPSBDYWxsKGl0ZXJhdG9yUmV0dXJuLCBpdGVyYXRvciwgW10pO1xuXHR9IGNhdGNoIChlKSB7XG5cdFx0Ly8gaWYgd2UgaGl0IGhlcmUsIHRoZW4gXCJlXCIgaXMgdGhlIGlubmVyUmVzdWx0IGNvbXBsZXRpb24gdGhhdCBuZWVkcyByZS10aHJvd2luZ1xuXG5cdFx0Ly8gaWYgdGhlIGNvbXBsZXRpb24gaXMgb2YgdHlwZSBcInRocm93XCIsIHRoaXMgd2lsbCB0aHJvdy5cblx0XHRjb21wbGV0aW9uVGh1bmsoKTtcblx0XHRjb21wbGV0aW9uVGh1bmsgPSBudWxsOyAvLyBlbnN1cmUgaXQncyBub3QgY2FsbGVkIHR3aWNlLlxuXG5cdFx0Ly8gaWYgbm90LCB0aGVuIHJldHVybiB0aGUgaW5uZXJSZXN1bHQgY29tcGxldGlvblxuXHRcdHRocm93IGU7XG5cdH1cblx0Y29tcGxldGlvblJlY29yZCA9IGNvbXBsZXRpb25UaHVuaygpOyAvLyBpZiBpbm5lclJlc3VsdCB3b3JrZWQsIHRoZW4gdGhyb3cgaWYgdGhlIGNvbXBsZXRpb24gZG9lc1xuXHRjb21wbGV0aW9uVGh1bmsgPSBudWxsOyAvLyBlbnN1cmUgaXQncyBub3QgY2FsbGVkIHR3aWNlLlxuXG5cdGlmIChUeXBlKGlubmVyUmVzdWx0KSAhPT0gJ09iamVjdCcpIHtcblx0XHR0aHJvdyBuZXcgJFR5cGVFcnJvcignaXRlcmF0b3IgLnJldHVybiBtdXN0IHJldHVybiBhbiBvYmplY3QnKTtcblx0fVxuXG5cdHJldHVybiBjb21wbGV0aW9uUmVjb3JkO1xufTtcbiJdfQ==