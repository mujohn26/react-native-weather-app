b6e57d4641720cb8263704a19859c140
'use strict';

var ReadableStream = require('stream').Readable,
    inherits = require('util').inherits,
    Serializer = require("./index");

var SerializerStream = module.exports = function (node, options) {
  ReadableStream.call(this);
  this.serializer = new Serializer(node, options);
  Object.defineProperty(this.serializer, 'html', {
    get: function get() {
      return '';
    },
    set: this.push.bind(this)
  });
};

inherits(SerializerStream, ReadableStream);

SerializerStream.prototype._read = function () {
  this.serializer.serialize();
  this.push(null);
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcmlhbGl6ZXJfc3RyZWFtLmpzIl0sIm5hbWVzIjpbIlJlYWRhYmxlU3RyZWFtIiwicmVxdWlyZSIsIlJlYWRhYmxlIiwiaW5oZXJpdHMiLCJTZXJpYWxpemVyIiwiU2VyaWFsaXplclN0cmVhbSIsIm1vZHVsZSIsImV4cG9ydHMiLCJub2RlIiwib3B0aW9ucyIsImNhbGwiLCJzZXJpYWxpemVyIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJnZXQiLCJzZXQiLCJwdXNoIiwiYmluZCIsInByb3RvdHlwZSIsIl9yZWFkIiwic2VyaWFsaXplIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFJQSxjQUFjLEdBQUdDLE9BQU8sQ0FBQyxRQUFELENBQVAsQ0FBa0JDLFFBQXZDO0FBQUEsSUFDSUMsUUFBUSxHQUFHRixPQUFPLENBQUMsTUFBRCxDQUFQLENBQWdCRSxRQUQvQjtBQUFBLElBRUlDLFVBQVUsR0FBR0gsT0FBTyxXQUZ4Qjs7QUFJQSxJQUFJSSxnQkFBZ0IsR0FBR0MsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQVVDLElBQVYsRUFBZ0JDLE9BQWhCLEVBQXlCO0FBQzdEVCxFQUFBQSxjQUFjLENBQUNVLElBQWYsQ0FBb0IsSUFBcEI7QUFFQSxPQUFLQyxVQUFMLEdBQWtCLElBQUlQLFVBQUosQ0FBZUksSUFBZixFQUFxQkMsT0FBckIsQ0FBbEI7QUFFQUcsRUFBQUEsTUFBTSxDQUFDQyxjQUFQLENBQXNCLEtBQUtGLFVBQTNCLEVBQXVDLE1BQXZDLEVBQStDO0FBRzNDRyxJQUFBQSxHQUFHLEVBQUUsZUFBWTtBQUNiLGFBQU8sRUFBUDtBQUNILEtBTDBDO0FBTTNDQyxJQUFBQSxHQUFHLEVBQUUsS0FBS0MsSUFBTCxDQUFVQyxJQUFWLENBQWUsSUFBZjtBQU5zQyxHQUEvQztBQVFILENBYkQ7O0FBZUFkLFFBQVEsQ0FBQ0UsZ0JBQUQsRUFBbUJMLGNBQW5CLENBQVI7O0FBR0FLLGdCQUFnQixDQUFDYSxTQUFqQixDQUEyQkMsS0FBM0IsR0FBbUMsWUFBWTtBQUMzQyxPQUFLUixVQUFMLENBQWdCUyxTQUFoQjtBQUNBLE9BQUtKLElBQUwsQ0FBVSxJQUFWO0FBQ0gsQ0FIRCIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWRhYmxlU3RyZWFtID0gcmVxdWlyZSgnc3RyZWFtJykuUmVhZGFibGUsXG4gICAgaW5oZXJpdHMgPSByZXF1aXJlKCd1dGlsJykuaW5oZXJpdHMsXG4gICAgU2VyaWFsaXplciA9IHJlcXVpcmUoJy4vaW5kZXgnKTtcblxudmFyIFNlcmlhbGl6ZXJTdHJlYW0gPSBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChub2RlLCBvcHRpb25zKSB7XG4gICAgUmVhZGFibGVTdHJlYW0uY2FsbCh0aGlzKTtcblxuICAgIHRoaXMuc2VyaWFsaXplciA9IG5ldyBTZXJpYWxpemVyKG5vZGUsIG9wdGlvbnMpO1xuXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMuc2VyaWFsaXplciwgJ2h0bWwnLCB7XG4gICAgICAgIC8vTk9URTogVG8gbWFrZSBgKz1gIGNvbmNhdCBvcGVyYXRvciB3b3JrIHByb3Blcmx5IHdlIGRlZmluZVxuICAgICAgICAvL2dldHRlciB3aGljaCBhbHdheXMgcmV0dXJucyBlbXB0eSBzdHJpbmdcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gJyc7XG4gICAgICAgIH0sXG4gICAgICAgIHNldDogdGhpcy5wdXNoLmJpbmQodGhpcylcbiAgICB9KTtcbn07XG5cbmluaGVyaXRzKFNlcmlhbGl6ZXJTdHJlYW0sIFJlYWRhYmxlU3RyZWFtKTtcblxuLy9SZWFkYWJsZSBzdHJlYW0gaW1wbGVtZW50YXRpb25cblNlcmlhbGl6ZXJTdHJlYW0ucHJvdG90eXBlLl9yZWFkID0gZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuc2VyaWFsaXplci5zZXJpYWxpemUoKTtcbiAgICB0aGlzLnB1c2gobnVsbCk7XG59O1xuIl19