{"version":3,"sources":["Call.js"],"names":["GetIntrinsic","require","callBound","$apply","module","exports","Call","F","V","args","arguments","length"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,mBAA1B;;AACA,IAAIC,SAAS,GAAGD,OAAO,wBAAvB;;AAEA,IAAIE,MAAM,GAAGH,YAAY,CAAC,iBAAD,EAAoB,IAApB,CAAZ,IAAyCE,SAAS,CAAC,4BAAD,CAA/D;;AAIAE,MAAM,CAACC,OAAP,GAAiB,SAASC,IAAT,CAAcC,CAAd,EAAiBC,CAAjB,EAAoB;AACpC,MAAIC,IAAI,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,GAAuBD,SAAS,CAAC,CAAD,CAAhC,GAAsC,EAAjD;AACA,SAAOP,MAAM,CAACI,CAAD,EAAIC,CAAJ,EAAOC,IAAP,CAAb;AACA,CAHD","sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('../GetIntrinsic');\nvar callBound = require('../helpers/callBound');\n\nvar $apply = GetIntrinsic('%Reflect.apply%', true) || callBound('%Function.prototype.apply%');\n\n// https://www.ecma-international.org/ecma-262/6.0/#sec-call\n\nmodule.exports = function Call(F, V) {\n\tvar args = arguments.length > 2 ? arguments[2] : [];\n\treturn $apply(F, V, args);\n};\n"]}