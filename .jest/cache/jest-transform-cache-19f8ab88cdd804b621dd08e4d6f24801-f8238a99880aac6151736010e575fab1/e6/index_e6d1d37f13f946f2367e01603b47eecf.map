{"version":3,"sources":["index.js"],"names":["Object","defineProperty","exports","value","default","set","_index","_interopRequireDefault","require","_index2","_index3","_index4","obj","__esModule","dirtyDate","values","arguments","RangeError","date","isNaN","Date","NaN","year","setFullYear","month","setDate","hours","setHours","minutes","setMinutes","seconds","setSeconds","milliseconds","setMilliseconds","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,GAAlB;;AAEA,IAAIC,MAAM,GAAGC,sBAAsB,CAACC,OAAO,sBAAR,CAAnC;;AAEA,IAAIC,OAAO,GAAGF,sBAAsB,CAACC,OAAO,wBAAR,CAApC;;AAEA,IAAIE,OAAO,GAAGH,sBAAsB,CAACC,OAAO,8BAAR,CAApC;;AAEA,IAAIG,OAAO,GAAGJ,sBAAsB,CAACC,OAAO,iCAAR,CAApC;;AAEA,SAASD,sBAAT,CAAgCK,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAER,IAAAA,OAAO,EAAEQ;AAAX,GAArC;AAAwD;;AAwC/F,SAASP,GAAT,CAAaS,SAAb,EAAwBC,MAAxB,EAAgC;AAC9B,GAAC,GAAGJ,OAAO,CAACP,OAAZ,EAAqB,CAArB,EAAwBY,SAAxB;;AAEA,MAAI,OAAOD,MAAP,KAAkB,QAAlB,IAA8BA,MAAM,KAAK,IAA7C,EAAmD;AACjD,UAAM,IAAIE,UAAJ,CAAe,oCAAf,CAAN;AACD;;AAED,MAAIC,IAAI,GAAG,CAAC,GAAGZ,MAAM,CAACF,OAAX,EAAoBU,SAApB,CAAX;;AAEA,MAAIK,KAAK,CAACD,IAAD,CAAT,EAAiB;AACf,WAAO,IAAIE,IAAJ,CAASC,GAAT,CAAP;AACD;;AAED,MAAIN,MAAM,CAACO,IAAP,IAAe,IAAnB,EAAyB;AACvBJ,IAAAA,IAAI,CAACK,WAAL,CAAiBR,MAAM,CAACO,IAAxB;AACD;;AAED,MAAIP,MAAM,CAACS,KAAP,IAAgB,IAApB,EAA0B;AACxBN,IAAAA,IAAI,GAAG,CAAC,GAAGT,OAAO,CAACL,OAAZ,EAAqBc,IAArB,EAA2BH,MAAM,CAACS,KAAlC,CAAP;AACD;;AAED,MAAIT,MAAM,CAACG,IAAP,IAAe,IAAnB,EAAyB;AACvBA,IAAAA,IAAI,CAACO,OAAL,CAAa,CAAC,GAAGf,OAAO,CAACN,OAAZ,EAAqBW,MAAM,CAACG,IAA5B,CAAb;AACD;;AAED,MAAIH,MAAM,CAACW,KAAP,IAAgB,IAApB,EAA0B;AACxBR,IAAAA,IAAI,CAACS,QAAL,CAAc,CAAC,GAAGjB,OAAO,CAACN,OAAZ,EAAqBW,MAAM,CAACW,KAA5B,CAAd;AACD;;AAED,MAAIX,MAAM,CAACa,OAAP,IAAkB,IAAtB,EAA4B;AAC1BV,IAAAA,IAAI,CAACW,UAAL,CAAgB,CAAC,GAAGnB,OAAO,CAACN,OAAZ,EAAqBW,MAAM,CAACa,OAA5B,CAAhB;AACD;;AAED,MAAIb,MAAM,CAACe,OAAP,IAAkB,IAAtB,EAA4B;AAC1BZ,IAAAA,IAAI,CAACa,UAAL,CAAgB,CAAC,GAAGrB,OAAO,CAACN,OAAZ,EAAqBW,MAAM,CAACe,OAA5B,CAAhB;AACD;;AAED,MAAIf,MAAM,CAACiB,YAAP,IAAuB,IAA3B,EAAiC;AAC/Bd,IAAAA,IAAI,CAACe,eAAL,CAAqB,CAAC,GAAGvB,OAAO,CAACN,OAAZ,EAAqBW,MAAM,CAACiB,YAA5B,CAArB;AACD;;AAED,SAAOd,IAAP;AACD;;AAEDgB,MAAM,CAAChC,OAAP,GAAiBA,OAAO,CAACE,OAAzB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = set;\n\nvar _index = _interopRequireDefault(require(\"../toDate/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../setMonth/index.js\"));\n\nvar _index3 = _interopRequireDefault(require(\"../_lib/toInteger/index.js\"));\n\nvar _index4 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name set\n * @category Common Helpers\n * @summary Set date values to a given date.\n *\n * @description\n * Set date values to a given date.\n *\n * Sets time values to date from object `values`.\n * A value is not set if it is undefined or null or doesn't exist in `values`.\n *\n * Note about bundle size: `set` does not internally use `setX` functions from date-fns but instead opts\n * to use native `Date#setX` methods. If you use this function, you may not want to include the\n * other `setX` functions that date-fns provides if you are concerned about the bundle size.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Object} values - an object with options\n * @param {Number} [values.year] - the number of years to be set\n * @param {Number} [values.month] - the number of months to be set\n * @param {Number} [values.date] - the number of days to be set\n * @param {Number} [values.hours] - the number of hours to be set\n * @param {Number} [values.minutes] - the number of minutes to be set\n * @param {Number} [values.seconds] - the number of seconds to be set\n * @param {Number} [values.milliseconds] - the number of milliseconds to be set\n * @returns {Date} the new date with options set\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `values` must be an object\n *\n * @example\n * // Transform 1 September 2014 into 20 October 2015 in a single line:\n * var result = set(new Date(2014, 8, 20), { year: 2015, month: 9, date: 20 })\n * //=> Tue Oct 20 2015 00:00:00\n *\n * @example\n * // Set 12 PM to 1 September 2014 01:23:45 to 1 September 2014 12:00:00:\n * var result = set(new Date(2014, 8, 1, 1, 23, 45), { hours: 12 })\n * //=> Mon Sep 01 2014 12:23:45\n */\nfunction set(dirtyDate, values) {\n  (0, _index4.default)(2, arguments);\n\n  if (typeof values !== 'object' || values === null) {\n    throw new RangeError('values parameter must be an object');\n  }\n\n  var date = (0, _index.default)(dirtyDate); // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date\n\n  if (isNaN(date)) {\n    return new Date(NaN);\n  }\n\n  if (values.year != null) {\n    date.setFullYear(values.year);\n  }\n\n  if (values.month != null) {\n    date = (0, _index2.default)(date, values.month);\n  }\n\n  if (values.date != null) {\n    date.setDate((0, _index3.default)(values.date));\n  }\n\n  if (values.hours != null) {\n    date.setHours((0, _index3.default)(values.hours));\n  }\n\n  if (values.minutes != null) {\n    date.setMinutes((0, _index3.default)(values.minutes));\n  }\n\n  if (values.seconds != null) {\n    date.setSeconds((0, _index3.default)(values.seconds));\n  }\n\n  if (values.milliseconds != null) {\n    date.setMilliseconds((0, _index3.default)(values.milliseconds));\n  }\n\n  return date;\n}\n\nmodule.exports = exports.default;"]}