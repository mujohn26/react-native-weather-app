49394057b39c26507a78389208a5a5b8
'use strict';

var utils = require("./../utils");

function encode(val) {
  return encodeURIComponent(val).replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',').replace(/%20/g, '+').replace(/%5B/gi, '[').replace(/%5D/gi, ']');
}

module.exports = function buildURL(url, params, paramsSerializer) {
  if (!params) {
    return url;
  }

  var serializedParams;

  if (paramsSerializer) {
    serializedParams = paramsSerializer(params);
  } else if (utils.isURLSearchParams(params)) {
    serializedParams = params.toString();
  } else {
    var parts = [];
    utils.forEach(params, function serialize(val, key) {
      if (val === null || typeof val === 'undefined') {
        return;
      }

      if (utils.isArray(val)) {
        key = key + '[]';
      } else {
        val = [val];
      }

      utils.forEach(val, function parseValue(v) {
        if (utils.isDate(v)) {
          v = v.toISOString();
        } else if (utils.isObject(v)) {
          v = JSON.stringify(v);
        }

        parts.push(encode(key) + '=' + encode(v));
      });
    });
    serializedParams = parts.join('&');
  }

  if (serializedParams) {
    var hashmarkIndex = url.indexOf('#');

    if (hashmarkIndex !== -1) {
      url = url.slice(0, hashmarkIndex);
    }

    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
  }

  return url;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1aWxkVVJMLmpzIl0sIm5hbWVzIjpbInV0aWxzIiwicmVxdWlyZSIsImVuY29kZSIsInZhbCIsImVuY29kZVVSSUNvbXBvbmVudCIsInJlcGxhY2UiLCJtb2R1bGUiLCJleHBvcnRzIiwiYnVpbGRVUkwiLCJ1cmwiLCJwYXJhbXMiLCJwYXJhbXNTZXJpYWxpemVyIiwic2VyaWFsaXplZFBhcmFtcyIsImlzVVJMU2VhcmNoUGFyYW1zIiwidG9TdHJpbmciLCJwYXJ0cyIsImZvckVhY2giLCJzZXJpYWxpemUiLCJrZXkiLCJpc0FycmF5IiwicGFyc2VWYWx1ZSIsInYiLCJpc0RhdGUiLCJ0b0lTT1N0cmluZyIsImlzT2JqZWN0IiwiSlNPTiIsInN0cmluZ2lmeSIsInB1c2giLCJqb2luIiwiaGFzaG1hcmtJbmRleCIsImluZGV4T2YiLCJzbGljZSJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsSUFBSUEsS0FBSyxHQUFHQyxPQUFPLGNBQW5COztBQUVBLFNBQVNDLE1BQVQsQ0FBZ0JDLEdBQWhCLEVBQXFCO0FBQ25CLFNBQU9DLGtCQUFrQixDQUFDRCxHQUFELENBQWxCLENBQ0xFLE9BREssQ0FDRyxPQURILEVBQ1ksR0FEWixFQUVMQSxPQUZLLENBRUcsTUFGSCxFQUVXLEdBRlgsRUFHTEEsT0FISyxDQUdHLE9BSEgsRUFHWSxHQUhaLEVBSUxBLE9BSkssQ0FJRyxNQUpILEVBSVcsR0FKWCxFQUtMQSxPQUxLLENBS0csT0FMSCxFQUtZLEdBTFosRUFNTEEsT0FOSyxDQU1HLE9BTkgsRUFNWSxHQU5aLENBQVA7QUFPRDs7QUFTREMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFNBQVNDLFFBQVQsQ0FBa0JDLEdBQWxCLEVBQXVCQyxNQUF2QixFQUErQkMsZ0JBQS9CLEVBQWlEO0FBRWhFLE1BQUksQ0FBQ0QsTUFBTCxFQUFhO0FBQ1gsV0FBT0QsR0FBUDtBQUNEOztBQUVELE1BQUlHLGdCQUFKOztBQUNBLE1BQUlELGdCQUFKLEVBQXNCO0FBQ3BCQyxJQUFBQSxnQkFBZ0IsR0FBR0QsZ0JBQWdCLENBQUNELE1BQUQsQ0FBbkM7QUFDRCxHQUZELE1BRU8sSUFBSVYsS0FBSyxDQUFDYSxpQkFBTixDQUF3QkgsTUFBeEIsQ0FBSixFQUFxQztBQUMxQ0UsSUFBQUEsZ0JBQWdCLEdBQUdGLE1BQU0sQ0FBQ0ksUUFBUCxFQUFuQjtBQUNELEdBRk0sTUFFQTtBQUNMLFFBQUlDLEtBQUssR0FBRyxFQUFaO0FBRUFmLElBQUFBLEtBQUssQ0FBQ2dCLE9BQU4sQ0FBY04sTUFBZCxFQUFzQixTQUFTTyxTQUFULENBQW1CZCxHQUFuQixFQUF3QmUsR0FBeEIsRUFBNkI7QUFDakQsVUFBSWYsR0FBRyxLQUFLLElBQVIsSUFBZ0IsT0FBT0EsR0FBUCxLQUFlLFdBQW5DLEVBQWdEO0FBQzlDO0FBQ0Q7O0FBRUQsVUFBSUgsS0FBSyxDQUFDbUIsT0FBTixDQUFjaEIsR0FBZCxDQUFKLEVBQXdCO0FBQ3RCZSxRQUFBQSxHQUFHLEdBQUdBLEdBQUcsR0FBRyxJQUFaO0FBQ0QsT0FGRCxNQUVPO0FBQ0xmLFFBQUFBLEdBQUcsR0FBRyxDQUFDQSxHQUFELENBQU47QUFDRDs7QUFFREgsTUFBQUEsS0FBSyxDQUFDZ0IsT0FBTixDQUFjYixHQUFkLEVBQW1CLFNBQVNpQixVQUFULENBQW9CQyxDQUFwQixFQUF1QjtBQUN4QyxZQUFJckIsS0FBSyxDQUFDc0IsTUFBTixDQUFhRCxDQUFiLENBQUosRUFBcUI7QUFDbkJBLFVBQUFBLENBQUMsR0FBR0EsQ0FBQyxDQUFDRSxXQUFGLEVBQUo7QUFDRCxTQUZELE1BRU8sSUFBSXZCLEtBQUssQ0FBQ3dCLFFBQU4sQ0FBZUgsQ0FBZixDQUFKLEVBQXVCO0FBQzVCQSxVQUFBQSxDQUFDLEdBQUdJLElBQUksQ0FBQ0MsU0FBTCxDQUFlTCxDQUFmLENBQUo7QUFDRDs7QUFDRE4sUUFBQUEsS0FBSyxDQUFDWSxJQUFOLENBQVd6QixNQUFNLENBQUNnQixHQUFELENBQU4sR0FBYyxHQUFkLEdBQW9CaEIsTUFBTSxDQUFDbUIsQ0FBRCxDQUFyQztBQUNELE9BUEQ7QUFRRCxLQW5CRDtBQXFCQVQsSUFBQUEsZ0JBQWdCLEdBQUdHLEtBQUssQ0FBQ2EsSUFBTixDQUFXLEdBQVgsQ0FBbkI7QUFDRDs7QUFFRCxNQUFJaEIsZ0JBQUosRUFBc0I7QUFDcEIsUUFBSWlCLGFBQWEsR0FBR3BCLEdBQUcsQ0FBQ3FCLE9BQUosQ0FBWSxHQUFaLENBQXBCOztBQUNBLFFBQUlELGFBQWEsS0FBSyxDQUFDLENBQXZCLEVBQTBCO0FBQ3hCcEIsTUFBQUEsR0FBRyxHQUFHQSxHQUFHLENBQUNzQixLQUFKLENBQVUsQ0FBVixFQUFhRixhQUFiLENBQU47QUFDRDs7QUFFRHBCLElBQUFBLEdBQUcsSUFBSSxDQUFDQSxHQUFHLENBQUNxQixPQUFKLENBQVksR0FBWixNQUFxQixDQUFDLENBQXRCLEdBQTBCLEdBQTFCLEdBQWdDLEdBQWpDLElBQXdDbEIsZ0JBQS9DO0FBQ0Q7O0FBRUQsU0FBT0gsR0FBUDtBQUNELENBaEREIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbmZ1bmN0aW9uIGVuY29kZSh2YWwpIHtcbiAgcmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudCh2YWwpLlxuICAgIHJlcGxhY2UoLyUzQS9naSwgJzonKS5cbiAgICByZXBsYWNlKC8lMjQvZywgJyQnKS5cbiAgICByZXBsYWNlKC8lMkMvZ2ksICcsJykuXG4gICAgcmVwbGFjZSgvJTIwL2csICcrJykuXG4gICAgcmVwbGFjZSgvJTVCL2dpLCAnWycpLlxuICAgIHJlcGxhY2UoLyU1RC9naSwgJ10nKTtcbn1cblxuLyoqXG4gKiBCdWlsZCBhIFVSTCBieSBhcHBlbmRpbmcgcGFyYW1zIHRvIHRoZSBlbmRcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gdXJsIFRoZSBiYXNlIG9mIHRoZSB1cmwgKGUuZy4sIGh0dHA6Ly93d3cuZ29vZ2xlLmNvbSlcbiAqIEBwYXJhbSB7b2JqZWN0fSBbcGFyYW1zXSBUaGUgcGFyYW1zIHRvIGJlIGFwcGVuZGVkXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBUaGUgZm9ybWF0dGVkIHVybFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGJ1aWxkVVJMKHVybCwgcGFyYW1zLCBwYXJhbXNTZXJpYWxpemVyKSB7XG4gIC8qZXNsaW50IG5vLXBhcmFtLXJlYXNzaWduOjAqL1xuICBpZiAoIXBhcmFtcykge1xuICAgIHJldHVybiB1cmw7XG4gIH1cblxuICB2YXIgc2VyaWFsaXplZFBhcmFtcztcbiAgaWYgKHBhcmFtc1NlcmlhbGl6ZXIpIHtcbiAgICBzZXJpYWxpemVkUGFyYW1zID0gcGFyYW1zU2VyaWFsaXplcihwYXJhbXMpO1xuICB9IGVsc2UgaWYgKHV0aWxzLmlzVVJMU2VhcmNoUGFyYW1zKHBhcmFtcykpIHtcbiAgICBzZXJpYWxpemVkUGFyYW1zID0gcGFyYW1zLnRvU3RyaW5nKCk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIHBhcnRzID0gW107XG5cbiAgICB1dGlscy5mb3JFYWNoKHBhcmFtcywgZnVuY3Rpb24gc2VyaWFsaXplKHZhbCwga2V5KSB7XG4gICAgICBpZiAodmFsID09PSBudWxsIHx8IHR5cGVvZiB2YWwgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKHV0aWxzLmlzQXJyYXkodmFsKSkge1xuICAgICAgICBrZXkgPSBrZXkgKyAnW10nO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFsID0gW3ZhbF07XG4gICAgICB9XG5cbiAgICAgIHV0aWxzLmZvckVhY2godmFsLCBmdW5jdGlvbiBwYXJzZVZhbHVlKHYpIHtcbiAgICAgICAgaWYgKHV0aWxzLmlzRGF0ZSh2KSkge1xuICAgICAgICAgIHYgPSB2LnRvSVNPU3RyaW5nKCk7XG4gICAgICAgIH0gZWxzZSBpZiAodXRpbHMuaXNPYmplY3QodikpIHtcbiAgICAgICAgICB2ID0gSlNPTi5zdHJpbmdpZnkodik7XG4gICAgICAgIH1cbiAgICAgICAgcGFydHMucHVzaChlbmNvZGUoa2V5KSArICc9JyArIGVuY29kZSh2KSk7XG4gICAgICB9KTtcbiAgICB9KTtcblxuICAgIHNlcmlhbGl6ZWRQYXJhbXMgPSBwYXJ0cy5qb2luKCcmJyk7XG4gIH1cblxuICBpZiAoc2VyaWFsaXplZFBhcmFtcykge1xuICAgIHZhciBoYXNobWFya0luZGV4ID0gdXJsLmluZGV4T2YoJyMnKTtcbiAgICBpZiAoaGFzaG1hcmtJbmRleCAhPT0gLTEpIHtcbiAgICAgIHVybCA9IHVybC5zbGljZSgwLCBoYXNobWFya0luZGV4KTtcbiAgICB9XG5cbiAgICB1cmwgKz0gKHVybC5pbmRleE9mKCc/JykgPT09IC0xID8gJz8nIDogJyYnKSArIHNlcmlhbGl6ZWRQYXJhbXM7XG4gIH1cblxuICByZXR1cm4gdXJsO1xufTtcbiJdfQ==