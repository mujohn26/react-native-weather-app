d4717511bf340a681f67023f1ee21000
var Parser = require("./Parser.js");

var DomHandler = require("domhandler");

function defineProp(name, value) {
  delete module.exports[name];
  module.exports[name] = value;
  return value;
}

module.exports = {
  Parser: Parser,
  Tokenizer: require("./Tokenizer.js"),
  ElementType: require("domelementtype"),
  DomHandler: DomHandler,

  get FeedHandler() {
    return defineProp("FeedHandler", require("./FeedHandler.js"));
  },

  get Stream() {
    return defineProp("Stream", require("./Stream.js"));
  },

  get WritableStream() {
    return defineProp("WritableStream", require("./WritableStream.js"));
  },

  get ProxyHandler() {
    return defineProp("ProxyHandler", require("./ProxyHandler.js"));
  },

  get DomUtils() {
    return defineProp("DomUtils", require("domutils"));
  },

  get CollectingHandler() {
    return defineProp("CollectingHandler", require("./CollectingHandler.js"));
  },

  DefaultHandler: DomHandler,

  get RssHandler() {
    return defineProp("RssHandler", this.FeedHandler);
  },

  parseDOM: function parseDOM(data, options) {
    var handler = new DomHandler(options);
    new Parser(handler, options).end(data);
    return handler.dom;
  },
  parseFeed: function parseFeed(feed, options) {
    var handler = new module.exports.FeedHandler(options);
    new Parser(handler, options).end(feed);
    return handler.dom;
  },
  createDomStream: function createDomStream(cb, options, elementCb) {
    var handler = new DomHandler(cb, options, elementCb);
    return new Parser(handler, options);
  },
  EVENTS: {
    attribute: 2,
    cdatastart: 0,
    cdataend: 0,
    text: 1,
    processinginstruction: 2,
    comment: 1,
    commentend: 0,
    closetag: 1,
    opentag: 2,
    opentagname: 1,
    error: 1,
    end: 0
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIlBhcnNlciIsInJlcXVpcmUiLCJEb21IYW5kbGVyIiwiZGVmaW5lUHJvcCIsIm5hbWUiLCJ2YWx1ZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJUb2tlbml6ZXIiLCJFbGVtZW50VHlwZSIsIkZlZWRIYW5kbGVyIiwiU3RyZWFtIiwiV3JpdGFibGVTdHJlYW0iLCJQcm94eUhhbmRsZXIiLCJEb21VdGlscyIsIkNvbGxlY3RpbmdIYW5kbGVyIiwiRGVmYXVsdEhhbmRsZXIiLCJSc3NIYW5kbGVyIiwicGFyc2VET00iLCJkYXRhIiwib3B0aW9ucyIsImhhbmRsZXIiLCJlbmQiLCJkb20iLCJwYXJzZUZlZWQiLCJmZWVkIiwiY3JlYXRlRG9tU3RyZWFtIiwiY2IiLCJlbGVtZW50Q2IiLCJFVkVOVFMiLCJhdHRyaWJ1dGUiLCJjZGF0YXN0YXJ0IiwiY2RhdGFlbmQiLCJ0ZXh0IiwicHJvY2Vzc2luZ2luc3RydWN0aW9uIiwiY29tbWVudCIsImNvbW1lbnRlbmQiLCJjbG9zZXRhZyIsIm9wZW50YWciLCJvcGVudGFnbmFtZSIsImVycm9yIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxNQUFNLEdBQUdDLE9BQU8sZUFBcEI7O0FBQ0EsSUFBSUMsVUFBVSxHQUFHRCxPQUFPLENBQUMsWUFBRCxDQUF4Qjs7QUFFQSxTQUFTRSxVQUFULENBQW9CQyxJQUFwQixFQUEwQkMsS0FBMUIsRUFBaUM7QUFDN0IsU0FBT0MsTUFBTSxDQUFDQyxPQUFQLENBQWVILElBQWYsQ0FBUDtBQUNBRSxFQUFBQSxNQUFNLENBQUNDLE9BQVAsQ0FBZUgsSUFBZixJQUF1QkMsS0FBdkI7QUFDQSxTQUFPQSxLQUFQO0FBQ0g7O0FBRURDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNiUCxFQUFBQSxNQUFNLEVBQUVBLE1BREs7QUFFYlEsRUFBQUEsU0FBUyxFQUFFUCxPQUFPLGtCQUZMO0FBR2JRLEVBQUFBLFdBQVcsRUFBRVIsT0FBTyxDQUFDLGdCQUFELENBSFA7QUFJYkMsRUFBQUEsVUFBVSxFQUFFQSxVQUpDOztBQUtiLE1BQUlRLFdBQUosR0FBa0I7QUFDZCxXQUFPUCxVQUFVLENBQUMsYUFBRCxFQUFnQkYsT0FBTyxvQkFBdkIsQ0FBakI7QUFDSCxHQVBZOztBQVFiLE1BQUlVLE1BQUosR0FBYTtBQUNULFdBQU9SLFVBQVUsQ0FBQyxRQUFELEVBQVdGLE9BQU8sZUFBbEIsQ0FBakI7QUFDSCxHQVZZOztBQVdiLE1BQUlXLGNBQUosR0FBcUI7QUFDakIsV0FBT1QsVUFBVSxDQUFDLGdCQUFELEVBQW1CRixPQUFPLHVCQUExQixDQUFqQjtBQUNILEdBYlk7O0FBY2IsTUFBSVksWUFBSixHQUFtQjtBQUNmLFdBQU9WLFVBQVUsQ0FBQyxjQUFELEVBQWlCRixPQUFPLHFCQUF4QixDQUFqQjtBQUNILEdBaEJZOztBQWlCYixNQUFJYSxRQUFKLEdBQWU7QUFDWCxXQUFPWCxVQUFVLENBQUMsVUFBRCxFQUFhRixPQUFPLENBQUMsVUFBRCxDQUFwQixDQUFqQjtBQUNILEdBbkJZOztBQW9CYixNQUFJYyxpQkFBSixHQUF3QjtBQUNwQixXQUFPWixVQUFVLENBQ2IsbUJBRGEsRUFFYkYsT0FBTywwQkFGTSxDQUFqQjtBQUlILEdBekJZOztBQTJCYmUsRUFBQUEsY0FBYyxFQUFFZCxVQTNCSDs7QUE0QmIsTUFBSWUsVUFBSixHQUFpQjtBQUNiLFdBQU9kLFVBQVUsQ0FBQyxZQUFELEVBQWUsS0FBS08sV0FBcEIsQ0FBakI7QUFDSCxHQTlCWTs7QUFnQ2JRLEVBQUFBLFFBQVEsRUFBRSxrQkFBU0MsSUFBVCxFQUFlQyxPQUFmLEVBQXdCO0FBQzlCLFFBQUlDLE9BQU8sR0FBRyxJQUFJbkIsVUFBSixDQUFla0IsT0FBZixDQUFkO0FBQ0EsUUFBSXBCLE1BQUosQ0FBV3FCLE9BQVgsRUFBb0JELE9BQXBCLEVBQTZCRSxHQUE3QixDQUFpQ0gsSUFBakM7QUFDQSxXQUFPRSxPQUFPLENBQUNFLEdBQWY7QUFDSCxHQXBDWTtBQXFDYkMsRUFBQUEsU0FBUyxFQUFFLG1CQUFTQyxJQUFULEVBQWVMLE9BQWYsRUFBd0I7QUFDL0IsUUFBSUMsT0FBTyxHQUFHLElBQUlmLE1BQU0sQ0FBQ0MsT0FBUCxDQUFlRyxXQUFuQixDQUErQlUsT0FBL0IsQ0FBZDtBQUNBLFFBQUlwQixNQUFKLENBQVdxQixPQUFYLEVBQW9CRCxPQUFwQixFQUE2QkUsR0FBN0IsQ0FBaUNHLElBQWpDO0FBQ0EsV0FBT0osT0FBTyxDQUFDRSxHQUFmO0FBQ0gsR0F6Q1k7QUEwQ2JHLEVBQUFBLGVBQWUsRUFBRSx5QkFBU0MsRUFBVCxFQUFhUCxPQUFiLEVBQXNCUSxTQUF0QixFQUFpQztBQUM5QyxRQUFJUCxPQUFPLEdBQUcsSUFBSW5CLFVBQUosQ0FBZXlCLEVBQWYsRUFBbUJQLE9BQW5CLEVBQTRCUSxTQUE1QixDQUFkO0FBQ0EsV0FBTyxJQUFJNUIsTUFBSixDQUFXcUIsT0FBWCxFQUFvQkQsT0FBcEIsQ0FBUDtBQUNILEdBN0NZO0FBK0NiUyxFQUFBQSxNQUFNLEVBQUU7QUFFSkMsSUFBQUEsU0FBUyxFQUFFLENBRlA7QUFHSkMsSUFBQUEsVUFBVSxFQUFFLENBSFI7QUFJSkMsSUFBQUEsUUFBUSxFQUFFLENBSk47QUFLSkMsSUFBQUEsSUFBSSxFQUFFLENBTEY7QUFNSkMsSUFBQUEscUJBQXFCLEVBQUUsQ0FObkI7QUFPSkMsSUFBQUEsT0FBTyxFQUFFLENBUEw7QUFRSkMsSUFBQUEsVUFBVSxFQUFFLENBUlI7QUFTSkMsSUFBQUEsUUFBUSxFQUFFLENBVE47QUFVSkMsSUFBQUEsT0FBTyxFQUFFLENBVkw7QUFXSkMsSUFBQUEsV0FBVyxFQUFFLENBWFQ7QUFZSkMsSUFBQUEsS0FBSyxFQUFFLENBWkg7QUFhSmxCLElBQUFBLEdBQUcsRUFBRTtBQWJEO0FBL0NLLENBQWpCIiwic291cmNlc0NvbnRlbnQiOlsidmFyIFBhcnNlciA9IHJlcXVpcmUoXCIuL1BhcnNlci5qc1wiKTtcbnZhciBEb21IYW5kbGVyID0gcmVxdWlyZShcImRvbWhhbmRsZXJcIik7XG5cbmZ1bmN0aW9uIGRlZmluZVByb3AobmFtZSwgdmFsdWUpIHtcbiAgICBkZWxldGUgbW9kdWxlLmV4cG9ydHNbbmFtZV07XG4gICAgbW9kdWxlLmV4cG9ydHNbbmFtZV0gPSB2YWx1ZTtcbiAgICByZXR1cm4gdmFsdWU7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIFBhcnNlcjogUGFyc2VyLFxuICAgIFRva2VuaXplcjogcmVxdWlyZShcIi4vVG9rZW5pemVyLmpzXCIpLFxuICAgIEVsZW1lbnRUeXBlOiByZXF1aXJlKFwiZG9tZWxlbWVudHR5cGVcIiksXG4gICAgRG9tSGFuZGxlcjogRG9tSGFuZGxlcixcbiAgICBnZXQgRmVlZEhhbmRsZXIoKSB7XG4gICAgICAgIHJldHVybiBkZWZpbmVQcm9wKFwiRmVlZEhhbmRsZXJcIiwgcmVxdWlyZShcIi4vRmVlZEhhbmRsZXIuanNcIikpO1xuICAgIH0sXG4gICAgZ2V0IFN0cmVhbSgpIHtcbiAgICAgICAgcmV0dXJuIGRlZmluZVByb3AoXCJTdHJlYW1cIiwgcmVxdWlyZShcIi4vU3RyZWFtLmpzXCIpKTtcbiAgICB9LFxuICAgIGdldCBXcml0YWJsZVN0cmVhbSgpIHtcbiAgICAgICAgcmV0dXJuIGRlZmluZVByb3AoXCJXcml0YWJsZVN0cmVhbVwiLCByZXF1aXJlKFwiLi9Xcml0YWJsZVN0cmVhbS5qc1wiKSk7XG4gICAgfSxcbiAgICBnZXQgUHJveHlIYW5kbGVyKCkge1xuICAgICAgICByZXR1cm4gZGVmaW5lUHJvcChcIlByb3h5SGFuZGxlclwiLCByZXF1aXJlKFwiLi9Qcm94eUhhbmRsZXIuanNcIikpO1xuICAgIH0sXG4gICAgZ2V0IERvbVV0aWxzKCkge1xuICAgICAgICByZXR1cm4gZGVmaW5lUHJvcChcIkRvbVV0aWxzXCIsIHJlcXVpcmUoXCJkb211dGlsc1wiKSk7XG4gICAgfSxcbiAgICBnZXQgQ29sbGVjdGluZ0hhbmRsZXIoKSB7XG4gICAgICAgIHJldHVybiBkZWZpbmVQcm9wKFxuICAgICAgICAgICAgXCJDb2xsZWN0aW5nSGFuZGxlclwiLFxuICAgICAgICAgICAgcmVxdWlyZShcIi4vQ29sbGVjdGluZ0hhbmRsZXIuanNcIilcbiAgICAgICAgKTtcbiAgICB9LFxuICAgIC8vIEZvciBsZWdhY3kgc3VwcG9ydFxuICAgIERlZmF1bHRIYW5kbGVyOiBEb21IYW5kbGVyLFxuICAgIGdldCBSc3NIYW5kbGVyKCkge1xuICAgICAgICByZXR1cm4gZGVmaW5lUHJvcChcIlJzc0hhbmRsZXJcIiwgdGhpcy5GZWVkSGFuZGxlcik7XG4gICAgfSxcbiAgICAvL2hlbHBlciBtZXRob2RzXG4gICAgcGFyc2VET006IGZ1bmN0aW9uKGRhdGEsIG9wdGlvbnMpIHtcbiAgICAgICAgdmFyIGhhbmRsZXIgPSBuZXcgRG9tSGFuZGxlcihvcHRpb25zKTtcbiAgICAgICAgbmV3IFBhcnNlcihoYW5kbGVyLCBvcHRpb25zKS5lbmQoZGF0YSk7XG4gICAgICAgIHJldHVybiBoYW5kbGVyLmRvbTtcbiAgICB9LFxuICAgIHBhcnNlRmVlZDogZnVuY3Rpb24oZmVlZCwgb3B0aW9ucykge1xuICAgICAgICB2YXIgaGFuZGxlciA9IG5ldyBtb2R1bGUuZXhwb3J0cy5GZWVkSGFuZGxlcihvcHRpb25zKTtcbiAgICAgICAgbmV3IFBhcnNlcihoYW5kbGVyLCBvcHRpb25zKS5lbmQoZmVlZCk7XG4gICAgICAgIHJldHVybiBoYW5kbGVyLmRvbTtcbiAgICB9LFxuICAgIGNyZWF0ZURvbVN0cmVhbTogZnVuY3Rpb24oY2IsIG9wdGlvbnMsIGVsZW1lbnRDYikge1xuICAgICAgICB2YXIgaGFuZGxlciA9IG5ldyBEb21IYW5kbGVyKGNiLCBvcHRpb25zLCBlbGVtZW50Q2IpO1xuICAgICAgICByZXR1cm4gbmV3IFBhcnNlcihoYW5kbGVyLCBvcHRpb25zKTtcbiAgICB9LFxuICAgIC8vIExpc3Qgb2YgYWxsIGV2ZW50cyB0aGF0IHRoZSBwYXJzZXIgZW1pdHNcbiAgICBFVkVOVFM6IHtcbiAgICAgICAgLyogRm9ybWF0OiBldmVudG5hbWU6IG51bWJlciBvZiBhcmd1bWVudHMgKi9cbiAgICAgICAgYXR0cmlidXRlOiAyLFxuICAgICAgICBjZGF0YXN0YXJ0OiAwLFxuICAgICAgICBjZGF0YWVuZDogMCxcbiAgICAgICAgdGV4dDogMSxcbiAgICAgICAgcHJvY2Vzc2luZ2luc3RydWN0aW9uOiAyLFxuICAgICAgICBjb21tZW50OiAxLFxuICAgICAgICBjb21tZW50ZW5kOiAwLFxuICAgICAgICBjbG9zZXRhZzogMSxcbiAgICAgICAgb3BlbnRhZzogMixcbiAgICAgICAgb3BlbnRhZ25hbWU6IDEsXG4gICAgICAgIGVycm9yOiAxLFxuICAgICAgICBlbmQ6IDBcbiAgICB9XG59O1xuIl19