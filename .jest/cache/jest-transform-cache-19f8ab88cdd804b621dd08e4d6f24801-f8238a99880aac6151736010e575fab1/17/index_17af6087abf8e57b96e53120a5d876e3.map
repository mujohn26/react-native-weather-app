{"version":3,"sources":["index.js"],"names":["Object","defineProperty","exports","value","default","formatDuration","_index","_interopRequireDefault","require","obj","__esModule","defaultFormat","duration","options","arguments","length","undefined","TypeError","concat","format","locale","zero","delimiter","result","reduce","acc","unit","token","replace","m","toUpperCase","addChunk","formatDistance","join","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,cAAlB;;AAEA,IAAIC,MAAM,GAAGC,sBAAsB,CAACC,OAAO,4BAAR,CAAnC;;AAEA,SAASD,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEL,IAAAA,OAAO,EAAEK;AAAX,GAArC;AAAwD;;AAE/F,IAAIE,aAAa,GAAG,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,EAA6B,MAA7B,EAAqC,OAArC,EAA8C,SAA9C,EAAyD,SAAzD,CAApB;;AAiEA,SAASN,cAAT,CAAwBO,QAAxB,EAAkC;AAChC,MAAIC,OAAO,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;;AAEA,MAAIA,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;AACxB,UAAM,IAAIE,SAAJ,CAAc,iCAAiCC,MAAjC,CAAwCJ,SAAS,CAACC,MAAlD,EAA0D,UAA1D,CAAd,CAAN;AACD;;AAED,MAAII,MAAM,GAAGN,OAAO,CAACM,MAAR,IAAkBR,aAA/B;AACA,MAAIS,MAAM,GAAGP,OAAO,CAACO,MAAR,IAAkBd,MAAM,CAACF,OAAtC;AACA,MAAIiB,IAAI,GAAGR,OAAO,CAACQ,IAAR,IAAgB,KAA3B;AACA,MAAIC,SAAS,GAAGT,OAAO,CAACS,SAAR,IAAqB,GAArC;AACA,MAAIC,MAAM,GAAGJ,MAAM,CAACK,MAAP,CAAc,UAAUC,GAAV,EAAeC,IAAf,EAAqB;AAC9C,QAAIC,KAAK,GAAG,IAAIT,MAAJ,CAAWQ,IAAI,CAACE,OAAL,CAAa,MAAb,EAAqB,UAAUC,CAAV,EAAa;AACvD,aAAOA,CAAC,CAACC,WAAF,EAAP;AACD,KAFsB,CAAX,CAAZ;AAGA,QAAIC,QAAQ,GAAG,OAAOnB,QAAQ,CAACc,IAAD,CAAf,KAA0B,QAA1B,KAAuCL,IAAI,IAAIT,QAAQ,CAACc,IAAD,CAAvD,CAAf;AACA,WAAOK,QAAQ,GAAGN,GAAG,CAACP,MAAJ,CAAWE,MAAM,CAACY,cAAP,CAAsBL,KAAtB,EAA6Bf,QAAQ,CAACc,IAAD,CAArC,CAAX,CAAH,GAA8DD,GAA7E;AACD,GANY,EAMV,EANU,EAMNQ,IANM,CAMDX,SANC,CAAb;AAOA,SAAOC,MAAP;AACD;;AAEDW,MAAM,CAAChC,OAAP,GAAiBA,OAAO,CAACE,OAAzB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = formatDuration;\n\nvar _index = _interopRequireDefault(require(\"../locale/en-US/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar defaultFormat = ['years', 'months', 'weeks', 'days', 'hours', 'minutes', 'seconds'];\n/**\n * @name formatDuration\n * @category Common Helpers\n * @summary Formats a duration in human-readable format\n *\n * @description\n * Return human-readable duration string i.e. \"9 months 2 days\"\n *\n * @param {Duration} duration - the duration to format\n * @param {Object} [options] - an object with options.\n\n * @param {string[]} [options.format=['years', 'months', 'weeks', 'days', 'hours', 'minutes', 'seconds']] - the array of units to format\n * @param {boolean} [options.zero=false] - should be zeros be included in the output?\n * @param {string} [options.delimiter=' '] - delimiter string\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {string} the formatted date string\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Format full duration\n * formatDuration({\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30\n * })\n * //=> '2 years 9 months 1 week 7 days 5 hours 9 minutes 30 seconds\n *\n * @example\n * // Format partial duration\n * formatDuration({ months: 9, days: 2 })\n * //=> '9 months 2 days'\n *\n * @example\n * // Customize the format\n * formatDuration(\n *   {\n *     years: 2,\n *     months: 9,\n *     weeks: 1,\n *     days: 7,\n *     hours: 5,\n *     minutes: 9,\n *     seconds: 30\n *   },\n *   { format: ['months', 'weeks'] }\n * ) === '9 months 1 week'\n *\n * @example\n * // Customize the zeros presence\n * formatDuration({ years: 0, months: 9 })\n * //=> '9 months'\n * formatDuration({ years: 0, months: 9 }, null, { zero: true })\n * //=> '0 years 9 months'\n *\n * @example\n * // Customize the delimiter\n * formatDuration({ years: 2, months: 9, weeks: 3 }, { delimiter: ', ' })\n * //=> '2 years, 9 months, 3 weeks'\n */\n\nfunction formatDuration(duration) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (arguments.length < 1) {\n    throw new TypeError(\"1 argument required, but only \".concat(arguments.length, \" present\"));\n  }\n\n  var format = options.format || defaultFormat;\n  var locale = options.locale || _index.default;\n  var zero = options.zero || false;\n  var delimiter = options.delimiter || ' ';\n  var result = format.reduce(function (acc, unit) {\n    var token = \"x\".concat(unit.replace(/(^.)/, function (m) {\n      return m.toUpperCase();\n    }));\n    var addChunk = typeof duration[unit] === 'number' && (zero || duration[unit]);\n    return addChunk ? acc.concat(locale.formatDistance(token, duration[unit])) : acc;\n  }, []).join(delimiter);\n  return result;\n}\n\nmodule.exports = exports.default;"]}