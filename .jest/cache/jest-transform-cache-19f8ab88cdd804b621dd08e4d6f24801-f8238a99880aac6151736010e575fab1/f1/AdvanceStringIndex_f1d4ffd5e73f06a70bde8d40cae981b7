673904f4468e4e5205bf4b11d35c6402
'use strict';

var GetIntrinsic = require("../GetIntrinsic");

var CodePointAt = require("./CodePointAt");

var IsInteger = require("./IsInteger");

var Type = require("./Type");

var MAX_SAFE_INTEGER = require("../helpers/maxSafeInteger");

var $TypeError = GetIntrinsic('%TypeError%');

module.exports = function AdvanceStringIndex(S, index, unicode) {
  if (Type(S) !== 'String') {
    throw new $TypeError('Assertion failed: `S` must be a String');
  }

  if (!IsInteger(index) || index < 0 || index > MAX_SAFE_INTEGER) {
    throw new $TypeError('Assertion failed: `length` must be an integer >= 0 and <= 2**53');
  }

  if (Type(unicode) !== 'Boolean') {
    throw new $TypeError('Assertion failed: `unicode` must be a Boolean');
  }

  if (!unicode) {
    return index + 1;
  }

  var length = S.length;

  if (index + 1 >= length) {
    return index + 1;
  }

  var cp = CodePointAt(S, index);
  return index + cp['[[CodeUnitCount]]'];
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkFkdmFuY2VTdHJpbmdJbmRleC5qcyJdLCJuYW1lcyI6WyJHZXRJbnRyaW5zaWMiLCJyZXF1aXJlIiwiQ29kZVBvaW50QXQiLCJJc0ludGVnZXIiLCJUeXBlIiwiTUFYX1NBRkVfSU5URUdFUiIsIiRUeXBlRXJyb3IiLCJtb2R1bGUiLCJleHBvcnRzIiwiQWR2YW5jZVN0cmluZ0luZGV4IiwiUyIsImluZGV4IiwidW5pY29kZSIsImxlbmd0aCIsImNwIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFJQSxZQUFZLEdBQUdDLE9BQU8sbUJBQTFCOztBQUVBLElBQUlDLFdBQVcsR0FBR0QsT0FBTyxpQkFBekI7O0FBQ0EsSUFBSUUsU0FBUyxHQUFHRixPQUFPLGVBQXZCOztBQUNBLElBQUlHLElBQUksR0FBR0gsT0FBTyxVQUFsQjs7QUFFQSxJQUFJSSxnQkFBZ0IsR0FBR0osT0FBTyw2QkFBOUI7O0FBRUEsSUFBSUssVUFBVSxHQUFHTixZQUFZLENBQUMsYUFBRCxDQUE3Qjs7QUFJQU8sTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFNBQVNDLGtCQUFULENBQTRCQyxDQUE1QixFQUErQkMsS0FBL0IsRUFBc0NDLE9BQXRDLEVBQStDO0FBQy9ELE1BQUlSLElBQUksQ0FBQ00sQ0FBRCxDQUFKLEtBQVksUUFBaEIsRUFBMEI7QUFDekIsVUFBTSxJQUFJSixVQUFKLENBQWUsd0NBQWYsQ0FBTjtBQUNBOztBQUNELE1BQUksQ0FBQ0gsU0FBUyxDQUFDUSxLQUFELENBQVYsSUFBcUJBLEtBQUssR0FBRyxDQUE3QixJQUFrQ0EsS0FBSyxHQUFHTixnQkFBOUMsRUFBZ0U7QUFDL0QsVUFBTSxJQUFJQyxVQUFKLENBQWUsaUVBQWYsQ0FBTjtBQUNBOztBQUNELE1BQUlGLElBQUksQ0FBQ1EsT0FBRCxDQUFKLEtBQWtCLFNBQXRCLEVBQWlDO0FBQ2hDLFVBQU0sSUFBSU4sVUFBSixDQUFlLCtDQUFmLENBQU47QUFDQTs7QUFDRCxNQUFJLENBQUNNLE9BQUwsRUFBYztBQUNiLFdBQU9ELEtBQUssR0FBRyxDQUFmO0FBQ0E7O0FBQ0QsTUFBSUUsTUFBTSxHQUFHSCxDQUFDLENBQUNHLE1BQWY7O0FBQ0EsTUFBS0YsS0FBSyxHQUFHLENBQVQsSUFBZUUsTUFBbkIsRUFBMkI7QUFDMUIsV0FBT0YsS0FBSyxHQUFHLENBQWY7QUFDQTs7QUFDRCxNQUFJRyxFQUFFLEdBQUdaLFdBQVcsQ0FBQ1EsQ0FBRCxFQUFJQyxLQUFKLENBQXBCO0FBQ0EsU0FBT0EsS0FBSyxHQUFHRyxFQUFFLENBQUMsbUJBQUQsQ0FBakI7QUFDQSxDQW5CRCIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIEdldEludHJpbnNpYyA9IHJlcXVpcmUoJy4uL0dldEludHJpbnNpYycpO1xuXG52YXIgQ29kZVBvaW50QXQgPSByZXF1aXJlKCcuL0NvZGVQb2ludEF0Jyk7XG52YXIgSXNJbnRlZ2VyID0gcmVxdWlyZSgnLi9Jc0ludGVnZXInKTtcbnZhciBUeXBlID0gcmVxdWlyZSgnLi9UeXBlJyk7XG5cbnZhciBNQVhfU0FGRV9JTlRFR0VSID0gcmVxdWlyZSgnLi4vaGVscGVycy9tYXhTYWZlSW50ZWdlcicpO1xuXG52YXIgJFR5cGVFcnJvciA9IEdldEludHJpbnNpYygnJVR5cGVFcnJvciUnKTtcblxuLy8gaHR0cHM6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzYuMC8jc2VjLWFkdmFuY2VzdHJpbmdpbmRleFxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIEFkdmFuY2VTdHJpbmdJbmRleChTLCBpbmRleCwgdW5pY29kZSkge1xuXHRpZiAoVHlwZShTKSAhPT0gJ1N0cmluZycpIHtcblx0XHR0aHJvdyBuZXcgJFR5cGVFcnJvcignQXNzZXJ0aW9uIGZhaWxlZDogYFNgIG11c3QgYmUgYSBTdHJpbmcnKTtcblx0fVxuXHRpZiAoIUlzSW50ZWdlcihpbmRleCkgfHwgaW5kZXggPCAwIHx8IGluZGV4ID4gTUFYX1NBRkVfSU5URUdFUikge1xuXHRcdHRocm93IG5ldyAkVHlwZUVycm9yKCdBc3NlcnRpb24gZmFpbGVkOiBgbGVuZ3RoYCBtdXN0IGJlIGFuIGludGVnZXIgPj0gMCBhbmQgPD0gMioqNTMnKTtcblx0fVxuXHRpZiAoVHlwZSh1bmljb2RlKSAhPT0gJ0Jvb2xlYW4nKSB7XG5cdFx0dGhyb3cgbmV3ICRUeXBlRXJyb3IoJ0Fzc2VydGlvbiBmYWlsZWQ6IGB1bmljb2RlYCBtdXN0IGJlIGEgQm9vbGVhbicpO1xuXHR9XG5cdGlmICghdW5pY29kZSkge1xuXHRcdHJldHVybiBpbmRleCArIDE7XG5cdH1cblx0dmFyIGxlbmd0aCA9IFMubGVuZ3RoO1xuXHRpZiAoKGluZGV4ICsgMSkgPj0gbGVuZ3RoKSB7XG5cdFx0cmV0dXJuIGluZGV4ICsgMTtcblx0fVxuXHR2YXIgY3AgPSBDb2RlUG9pbnRBdChTLCBpbmRleCk7XG5cdHJldHVybiBpbmRleCArIGNwWydbW0NvZGVVbml0Q291bnRdXSddO1xufTtcbiJdfQ==